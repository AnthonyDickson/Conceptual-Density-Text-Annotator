-- phpMyAdmin SQL Dump
-- version 4.8.5
-- https://www.phpmyadmin.net/
--
-- Host: localhost
-- Generation Time: Sep 24, 2019 at 01:22 AM
-- Server version: 8.0.13-4
-- PHP Version: 7.2.19-0ubuntu0.18.04.2

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `9x2jASit7J`
--
CREATE DATABASE IF NOT EXISTS `9x2jASit7J` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
USE `9x2jASit7J`;

-- --------------------------------------------------------

--
-- Table structure for table `annotation`
--

DROP TABLE IF EXISTS `annotation`;
CREATE TABLE `annotation` (
  `document_id` int(11) UNSIGNED NOT NULL,
  `section_number` int(11) UNSIGNED NOT NULL,
  `start` int(11) UNSIGNED NOT NULL,
  `end` int(11) UNSIGNED NOT NULL,
  `tag` enum('A PRIORI','EMERGING','FORWARD','BACKWARD','ENTITY','RELATION') CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci ROW_FORMAT=COMPACT;

--
-- Truncate table before insert `annotation`
--

TRUNCATE TABLE `annotation`;
--
-- Dumping data for table `annotation`
--

INSERT INTO `annotation` (`document_id`, `section_number`, `start`, `end`, `tag`) VALUES
(17, 1, 1, 2, 'A PRIORI'),
(17, 1, 3, 4, 'EMERGING'),
(17, 1, 6, 7, 'A PRIORI'),
(17, 1, 8, 9, 'A PRIORI'),
(17, 1, 11, 12, 'A PRIORI'),
(17, 1, 13, 14, 'A PRIORI'),
(17, 1, 16, 17, 'A PRIORI'),
(17, 1, 18, 19, 'A PRIORI'),
(17, 1, 20, 21, 'A PRIORI'),
(17, 1, 23, 24, 'A PRIORI'),
(17, 1, 29, 30, 'A PRIORI'),
(17, 1, 30, 31, 'A PRIORI'),
(17, 1, 32, 33, 'EMERGING'),
(17, 1, 34, 35, 'A PRIORI'),
(17, 1, 39, 40, 'A PRIORI'),
(17, 1, 47, 48, 'A PRIORI'),
(17, 1, 48, 49, 'A PRIORI'),
(17, 1, 56, 57, 'A PRIORI'),
(17, 1, 57, 58, 'A PRIORI'),
(17, 1, 63, 64, 'A PRIORI'),
(17, 1, 64, 65, 'A PRIORI'),
(17, 1, 70, 71, 'EMERGING'),
(17, 1, 72, 73, 'A PRIORI'),
(17, 1, 74, 75, 'A PRIORI'),
(17, 1, 76, 77, 'A PRIORI'),
(17, 1, 102, 103, 'A PRIORI'),
(17, 1, 107, 108, 'EMERGING'),
(17, 1, 110, 111, 'A PRIORI'),
(17, 1, 112, 113, 'A PRIORI'),
(17, 1, 116, 117, 'EMERGING'),
(17, 1, 121, 122, 'A PRIORI'),
(17, 2, 1, 2, 'A PRIORI'),
(17, 2, 4, 5, 'EMERGING'),
(17, 2, 4, 5, 'BACKWARD'),
(17, 2, 7, 8, 'A PRIORI'),
(17, 2, 9, 10, 'A PRIORI'),
(17, 2, 11, 12, 'A PRIORI'),
(17, 2, 15, 16, 'A PRIORI'),
(17, 2, 17, 18, 'EMERGING'),
(17, 2, 17, 18, 'FORWARD'),
(17, 2, 18, 19, 'A PRIORI'),
(17, 2, 22, 23, 'EMERGING'),
(17, 2, 22, 23, 'FORWARD'),
(17, 2, 23, 24, 'A PRIORI'),
(17, 2, 28, 29, 'A PRIORI'),
(17, 2, 36, 37, 'A PRIORI'),
(17, 2, 38, 39, 'EMERGING'),
(17, 2, 38, 39, 'FORWARD'),
(17, 2, 40, 41, 'A PRIORI'),
(17, 2, 41, 42, 'A PRIORI'),
(17, 2, 42, 43, 'A PRIORI'),
(17, 2, 44, 45, 'A PRIORI'),
(17, 2, 45, 46, 'A PRIORI'),
(17, 2, 47, 48, 'A PRIORI'),
(17, 2, 49, 50, 'A PRIORI'),
(17, 2, 53, 54, 'EMERGING'),
(17, 2, 53, 54, 'FORWARD'),
(17, 2, 56, 57, 'A PRIORI'),
(17, 2, 59, 60, 'A PRIORI'),
(17, 2, 61, 62, 'A PRIORI'),
(17, 2, 66, 67, 'A PRIORI'),
(17, 2, 69, 70, 'A PRIORI'),
(17, 2, 73, 74, 'A PRIORI'),
(17, 2, 76, 77, 'A PRIORI'),
(17, 2, 81, 82, 'EMERGING'),
(17, 2, 81, 82, 'FORWARD'),
(17, 2, 82, 83, 'A PRIORI'),
(17, 2, 84, 85, 'A PRIORI'),
(17, 2, 89, 90, 'A PRIORI'),
(17, 2, 90, 91, 'A PRIORI'),
(17, 2, 92, 93, 'A PRIORI'),
(17, 2, 95, 96, 'A PRIORI'),
(17, 2, 97, 98, 'A PRIORI'),
(17, 2, 98, 99, 'A PRIORI'),
(17, 2, 101, 102, 'A PRIORI'),
(17, 2, 107, 108, 'A PRIORI'),
(17, 2, 109, 110, 'A PRIORI'),
(17, 2, 110, 111, 'A PRIORI'),
(17, 2, 112, 113, 'EMERGING'),
(17, 2, 112, 113, 'BACKWARD'),
(17, 2, 114, 115, 'A PRIORI'),
(17, 2, 118, 119, 'A PRIORI'),
(17, 2, 120, 121, 'A PRIORI'),
(17, 2, 121, 122, 'A PRIORI'),
(17, 2, 127, 128, 'A PRIORI'),
(17, 2, 131, 132, 'EMERGING'),
(17, 2, 131, 132, 'BACKWARD'),
(17, 2, 134, 135, 'A PRIORI'),
(17, 2, 139, 140, 'A PRIORI'),
(17, 2, 141, 142, 'A PRIORI'),
(17, 2, 142, 143, 'A PRIORI'),
(17, 2, 143, 144, 'A PRIORI'),
(17, 2, 147, 148, 'A PRIORI'),
(17, 2, 147, 148, 'BACKWARD'),
(17, 2, 150, 151, 'A PRIORI'),
(17, 2, 151, 152, 'EMERGING'),
(17, 2, 151, 152, 'BACKWARD'),
(17, 2, 152, 153, 'A PRIORI'),
(17, 2, 156, 157, 'EMERGING'),
(17, 2, 156, 157, 'FORWARD'),
(17, 2, 164, 165, 'A PRIORI'),
(17, 2, 171, 172, 'EMERGING'),
(17, 2, 171, 172, 'FORWARD'),
(17, 2, 173, 174, 'A PRIORI'),
(17, 2, 176, 177, 'A PRIORI'),
(17, 2, 178, 179, 'A PRIORI'),
(17, 2, 179, 180, 'A PRIORI'),
(17, 2, 184, 185, 'A PRIORI'),
(17, 2, 187, 188, 'A PRIORI'),
(17, 2, 188, 189, 'A PRIORI'),
(17, 2, 192, 193, 'A PRIORI'),
(17, 2, 194, 195, 'A PRIORI'),
(17, 2, 202, 203, 'A PRIORI'),
(17, 2, 203, 204, 'EMERGING'),
(17, 2, 203, 204, 'FORWARD'),
(17, 2, 206, 207, 'A PRIORI'),
(17, 2, 208, 209, 'EMERGING'),
(17, 2, 208, 209, 'FORWARD'),
(17, 2, 210, 211, 'A PRIORI'),
(17, 2, 213, 214, 'A PRIORI'),
(17, 2, 218, 219, 'EMERGING'),
(17, 2, 221, 222, 'A PRIORI'),
(17, 2, 226, 227, 'A PRIORI'),
(17, 2, 229, 230, 'EMERGING'),
(17, 2, 229, 230, 'BACKWARD'),
(17, 2, 230, 231, 'A PRIORI'),
(17, 2, 235, 236, 'EMERGING'),
(17, 2, 235, 236, 'FORWARD'),
(17, 2, 236, 237, 'A PRIORI'),
(17, 2, 239, 240, 'A PRIORI'),
(17, 2, 251, 252, 'A PRIORI'),
(17, 2, 253, 254, 'EMERGING'),
(17, 2, 253, 254, 'BACKWARD'),
(17, 2, 255, 256, 'A PRIORI'),
(17, 2, 259, 260, 'A PRIORI'),
(17, 2, 262, 263, 'A PRIORI'),
(17, 2, 263, 264, 'A PRIORI'),
(17, 2, 264, 265, 'A PRIORI'),
(17, 2, 268, 269, 'A PRIORI'),
(17, 2, 277, 278, 'EMERGING'),
(17, 2, 277, 278, 'FORWARD'),
(17, 2, 290, 291, 'A PRIORI'),
(17, 2, 293, 294, 'EMERGING'),
(17, 2, 293, 294, 'BACKWARD'),
(17, 2, 301, 302, 'A PRIORI'),
(17, 2, 302, 303, 'EMERGING'),
(17, 2, 302, 303, 'BACKWARD'),
(17, 2, 303, 304, 'A PRIORI'),
(17, 2, 304, 305, 'A PRIORI'),
(17, 2, 305, 306, 'A PRIORI'),
(17, 2, 310, 311, 'EMERGING'),
(17, 2, 310, 311, 'BACKWARD'),
(17, 2, 316, 317, 'EMERGING'),
(17, 2, 316, 317, 'FORWARD'),
(17, 2, 319, 320, 'A PRIORI'),
(17, 2, 320, 321, 'A PRIORI'),
(17, 2, 322, 323, 'EMERGING'),
(17, 2, 322, 323, 'FORWARD'),
(17, 2, 323, 324, 'A PRIORI'),
(17, 3, 1, 2, 'A PRIORI'),
(17, 3, 3, 4, 'EMERGING'),
(17, 3, 3, 4, 'BACKWARD'),
(17, 3, 6, 7, 'A PRIORI'),
(17, 3, 9, 10, 'A PRIORI'),
(17, 3, 10, 11, 'A PRIORI'),
(17, 3, 12, 13, 'A PRIORI'),
(17, 3, 15, 16, 'A PRIORI'),
(17, 3, 17, 18, 'A PRIORI'),
(17, 3, 19, 20, 'A PRIORI'),
(17, 3, 22, 23, 'A PRIORI'),
(17, 3, 29, 30, 'A PRIORI'),
(17, 3, 31, 32, 'A PRIORI'),
(17, 3, 34, 35, 'A PRIORI'),
(17, 3, 47, 48, 'A PRIORI'),
(17, 3, 49, 50, 'EMERGING'),
(17, 3, 49, 50, 'FORWARD'),
(17, 3, 54, 55, 'A PRIORI'),
(17, 3, 56, 57, 'A PRIORI'),
(17, 3, 58, 59, 'EMERGING'),
(17, 3, 61, 62, 'A PRIORI'),
(17, 3, 64, 65, 'A PRIORI'),
(17, 3, 65, 66, 'A PRIORI'),
(17, 3, 66, 67, 'A PRIORI'),
(17, 3, 67, 68, 'A PRIORI'),
(17, 3, 69, 70, 'A PRIORI'),
(17, 3, 73, 74, 'A PRIORI'),
(17, 3, 76, 77, 'A PRIORI'),
(17, 3, 80, 81, 'A PRIORI'),
(17, 3, 83, 84, 'EMERGING'),
(17, 3, 87, 88, 'A PRIORI'),
(17, 3, 91, 92, 'A PRIORI'),
(17, 3, 92, 93, 'A PRIORI'),
(17, 3, 95, 96, 'A PRIORI'),
(17, 3, 98, 99, 'A PRIORI'),
(17, 3, 99, 100, 'A PRIORI'),
(17, 3, 102, 104, 'A PRIORI'),
(17, 3, 109, 110, 'A PRIORI'),
(17, 3, 119, 120, 'A PRIORI'),
(17, 3, 122, 123, 'A PRIORI'),
(17, 3, 125, 126, 'A PRIORI'),
(17, 3, 126, 127, 'A PRIORI'),
(17, 3, 128, 129, 'A PRIORI'),
(17, 3, 133, 134, 'EMERGING'),
(17, 3, 133, 134, 'FORWARD'),
(17, 3, 134, 135, 'A PRIORI'),
(17, 3, 137, 138, 'A PRIORI'),
(17, 3, 140, 141, 'A PRIORI'),
(17, 3, 144, 145, 'A PRIORI'),
(17, 3, 146, 147, 'EMERGING'),
(17, 3, 146, 147, 'FORWARD'),
(17, 3, 149, 150, 'A PRIORI'),
(17, 3, 154, 155, 'EMERGING'),
(17, 3, 154, 155, 'FORWARD'),
(17, 3, 157, 158, 'A PRIORI'),
(17, 3, 161, 162, 'EMERGING'),
(17, 3, 163, 165, 'EMERGING'),
(17, 3, 167, 168, 'A PRIORI'),
(17, 3, 171, 172, 'A PRIORI'),
(17, 3, 172, 173, 'A PRIORI'),
(17, 3, 175, 176, 'A PRIORI'),
(17, 3, 176, 177, 'A PRIORI'),
(17, 3, 178, 179, 'A PRIORI'),
(17, 3, 179, 180, 'A PRIORI'),
(17, 3, 181, 182, 'EMERGING'),
(17, 3, 181, 182, 'FORWARD'),
(17, 3, 182, 183, 'A PRIORI'),
(17, 3, 185, 186, 'A PRIORI'),
(17, 3, 193, 194, 'A PRIORI'),
(17, 3, 195, 196, 'A PRIORI'),
(17, 3, 196, 197, 'A PRIORI'),
(17, 3, 199, 200, 'A PRIORI'),
(17, 3, 202, 203, 'A PRIORI'),
(17, 3, 203, 204, 'A PRIORI'),
(17, 3, 206, 207, 'A PRIORI'),
(17, 3, 209, 210, 'EMERGING'),
(17, 3, 209, 210, 'BACKWARD'),
(17, 3, 212, 213, 'A PRIORI'),
(17, 3, 219, 220, 'EMERGING'),
(17, 3, 219, 220, 'BACKWARD'),
(17, 3, 220, 221, 'A PRIORI'),
(17, 3, 225, 226, 'A PRIORI'),
(17, 3, 236, 237, 'EMERGING'),
(17, 3, 236, 237, 'BACKWARD'),
(17, 3, 241, 242, 'A PRIORI'),
(17, 3, 241, 242, 'BACKWARD'),
(17, 3, 242, 243, 'A PRIORI'),
(17, 3, 256, 257, 'EMERGING'),
(17, 3, 256, 257, 'BACKWARD'),
(17, 3, 262, 263, 'A PRIORI'),
(17, 3, 265, 266, 'A PRIORI'),
(17, 3, 266, 267, 'A PRIORI'),
(17, 3, 267, 268, 'A PRIORI'),
(17, 3, 270, 271, 'A PRIORI'),
(17, 3, 271, 272, 'EMERGING'),
(17, 3, 271, 272, 'BACKWARD'),
(17, 3, 272, 273, 'A PRIORI'),
(17, 3, 277, 278, 'A PRIORI'),
(17, 3, 278, 279, 'A PRIORI'),
(17, 3, 283, 284, 'A PRIORI'),
(17, 3, 286, 287, 'A PRIORI'),
(17, 3, 289, 290, 'A PRIORI'),
(17, 3, 290, 291, 'A PRIORI'),
(17, 3, 295, 296, 'A PRIORI'),
(17, 3, 303, 304, 'A PRIORI'),
(17, 3, 304, 305, 'A PRIORI'),
(17, 3, 319, 320, 'A PRIORI'),
(17, 3, 320, 321, 'A PRIORI'),
(17, 3, 324, 325, 'A PRIORI'),
(17, 3, 331, 332, 'A PRIORI'),
(17, 3, 332, 333, 'EMERGING'),
(17, 3, 332, 333, 'BACKWARD'),
(17, 3, 333, 334, 'A PRIORI'),
(17, 3, 335, 336, 'A PRIORI'),
(17, 3, 336, 337, 'A PRIORI'),
(17, 3, 340, 341, 'A PRIORI'),
(17, 3, 341, 342, 'A PRIORI'),
(17, 3, 343, 344, 'A PRIORI'),
(17, 3, 344, 345, 'EMERGING'),
(17, 3, 344, 345, 'BACKWARD'),
(17, 3, 345, 346, 'A PRIORI'),
(17, 3, 349, 350, 'A PRIORI'),
(17, 3, 350, 351, 'A PRIORI'),
(17, 4, 1, 2, 'A PRIORI'),
(17, 4, 3, 4, 'A PRIORI'),
(17, 4, 4, 5, 'A PRIORI'),
(17, 4, 7, 8, 'A PRIORI'),
(17, 4, 8, 9, 'A PRIORI'),
(17, 4, 10, 11, 'A PRIORI'),
(17, 4, 11, 12, 'A PRIORI'),
(17, 4, 14, 15, 'A PRIORI'),
(17, 4, 15, 16, 'EMERGING'),
(17, 4, 15, 16, 'FORWARD'),
(17, 4, 18, 19, 'A PRIORI'),
(17, 4, 21, 22, 'A PRIORI'),
(17, 4, 22, 23, 'EMERGING'),
(17, 4, 22, 23, 'FORWARD'),
(17, 4, 23, 24, 'A PRIORI'),
(17, 4, 27, 28, 'EMERGING'),
(17, 4, 27, 28, 'FORWARD'),
(17, 4, 28, 29, 'A PRIORI'),
(17, 4, 31, 32, 'A PRIORI'),
(17, 4, 34, 35, 'A PRIORI'),
(17, 4, 35, 36, 'A PRIORI'),
(17, 4, 38, 39, 'A PRIORI'),
(17, 4, 39, 40, 'A PRIORI'),
(17, 4, 42, 43, 'A PRIORI'),
(17, 4, 45, 46, 'A PRIORI'),
(17, 4, 48, 49, 'EMERGING'),
(17, 4, 48, 49, 'FORWARD'),
(17, 4, 51, 52, 'A PRIORI'),
(17, 4, 56, 57, 'A PRIORI'),
(17, 4, 57, 58, 'A PRIORI'),
(17, 4, 60, 61, 'A PRIORI'),
(17, 4, 61, 62, 'A PRIORI'),
(17, 4, 63, 64, 'A PRIORI'),
(17, 4, 67, 68, 'EMERGING'),
(17, 4, 67, 68, 'BACKWARD'),
(17, 4, 70, 71, 'A PRIORI'),
(17, 4, 72, 73, 'A PRIORI'),
(17, 4, 73, 74, 'A PRIORI'),
(17, 4, 76, 77, 'A PRIORI'),
(17, 4, 79, 80, 'A PRIORI'),
(17, 4, 82, 83, 'A PRIORI'),
(17, 4, 83, 84, 'A PRIORI'),
(17, 4, 86, 87, 'EMERGING'),
(17, 4, 86, 87, 'FORWARD'),
(17, 4, 91, 92, 'A PRIORI'),
(17, 4, 92, 93, 'A PRIORI'),
(17, 4, 98, 99, 'A PRIORI'),
(17, 4, 99, 100, 'A PRIORI'),
(17, 4, 104, 105, 'A PRIORI'),
(17, 4, 105, 106, 'A PRIORI'),
(17, 4, 108, 109, 'A PRIORI'),
(17, 4, 109, 110, 'EMERGING'),
(17, 4, 109, 110, 'FORWARD'),
(17, 4, 112, 113, 'A PRIORI'),
(17, 4, 115, 116, 'A PRIORI'),
(17, 4, 116, 117, 'A PRIORI'),
(17, 4, 119, 120, 'A PRIORI'),
(17, 4, 120, 121, 'EMERGING'),
(17, 4, 120, 121, 'FORWARD'),
(17, 4, 123, 124, 'A PRIORI'),
(17, 4, 124, 125, 'A PRIORI'),
(17, 4, 127, 128, 'A PRIORI'),
(17, 4, 130, 131, 'A PRIORI'),
(17, 4, 131, 132, 'EMERGING'),
(17, 4, 131, 132, 'FORWARD'),
(17, 4, 134, 135, 'A PRIORI'),
(17, 4, 137, 138, 'A PRIORI'),
(17, 4, 138, 139, 'A PRIORI'),
(17, 4, 140, 141, 'EMERGING'),
(17, 4, 140, 141, 'FORWARD'),
(17, 4, 141, 142, 'A PRIORI'),
(17, 4, 143, 144, 'A PRIORI'),
(17, 4, 146, 147, 'A PRIORI'),
(17, 4, 147, 148, 'EMERGING'),
(17, 4, 147, 148, 'FORWARD'),
(17, 4, 149, 150, 'A PRIORI'),
(17, 4, 150, 151, 'EMERGING'),
(17, 4, 150, 151, 'FORWARD'),
(17, 4, 153, 154, 'A PRIORI'),
(17, 4, 156, 157, 'A PRIORI'),
(17, 4, 157, 158, 'A PRIORI'),
(17, 4, 160, 161, 'A PRIORI'),
(17, 4, 163, 164, 'A PRIORI'),
(17, 4, 166, 167, 'A PRIORI'),
(17, 4, 167, 168, 'A PRIORI'),
(17, 4, 168, 169, 'A PRIORI'),
(17, 4, 174, 175, 'A PRIORI'),
(17, 4, 177, 178, 'A PRIORI'),
(17, 4, 178, 179, 'A PRIORI'),
(17, 4, 182, 183, 'EMERGING'),
(17, 4, 182, 183, 'FORWARD'),
(17, 4, 185, 186, 'A PRIORI'),
(17, 4, 191, 192, 'A PRIORI'),
(17, 4, 193, 194, 'A PRIORI'),
(17, 4, 199, 200, 'A PRIORI'),
(17, 4, 200, 201, 'A PRIORI'),
(17, 4, 202, 203, 'A PRIORI'),
(17, 4, 203, 204, 'A PRIORI'),
(17, 4, 206, 207, 'A PRIORI'),
(17, 4, 209, 210, 'EMERGING'),
(17, 4, 209, 210, 'BACKWARD'),
(17, 4, 210, 211, 'A PRIORI'),
(17, 4, 213, 214, 'A PRIORI'),
(17, 4, 214, 215, 'EMERGING'),
(17, 4, 214, 215, 'FORWARD'),
(17, 4, 216, 217, 'A PRIORI'),
(17, 4, 217, 218, 'EMERGING'),
(17, 4, 217, 218, 'FORWARD'),
(17, 4, 220, 221, 'A PRIORI'),
(17, 4, 222, 223, 'EMERGING'),
(17, 4, 222, 223, 'BACKWARD'),
(17, 4, 223, 224, 'A PRIORI'),
(17, 4, 226, 227, 'A PRIORI'),
(17, 4, 227, 228, 'A PRIORI'),
(17, 4, 228, 229, 'EMERGING'),
(17, 4, 228, 229, 'BACKWARD'),
(17, 4, 229, 230, 'A PRIORI'),
(17, 4, 231, 232, 'A PRIORI'),
(17, 4, 234, 235, 'A PRIORI'),
(17, 4, 235, 236, 'A PRIORI'),
(17, 4, 238, 239, 'A PRIORI'),
(17, 4, 239, 240, 'A PRIORI'),
(17, 4, 242, 243, 'EMERGING'),
(17, 4, 242, 243, 'FORWARD'),
(17, 4, 245, 246, 'A PRIORI'),
(17, 4, 247, 248, 'A PRIORI'),
(17, 4, 251, 252, 'A PRIORI'),
(17, 4, 252, 253, 'A PRIORI'),
(17, 4, 253, 254, 'A PRIORI'),
(17, 4, 254, 255, 'A PRIORI'),
(17, 4, 258, 259, 'A PRIORI'),
(17, 4, 259, 260, 'A PRIORI'),
(17, 4, 262, 263, 'A PRIORI'),
(17, 5, 2, 3, 'A PRIORI'),
(17, 5, 5, 6, 'A PRIORI'),
(17, 5, 12, 13, 'EMERGING'),
(17, 5, 19, 20, 'A PRIORI'),
(17, 5, 26, 27, 'A PRIORI'),
(17, 5, 27, 28, 'A PRIORI'),
(17, 5, 28, 29, 'EMERGING'),
(17, 5, 28, 29, 'BACKWARD'),
(17, 5, 31, 32, 'A PRIORI'),
(17, 5, 33, 34, 'A PRIORI'),
(17, 5, 37, 38, 'A PRIORI'),
(17, 5, 42, 43, 'A PRIORI'),
(17, 5, 53, 54, 'A PRIORI'),
(17, 5, 55, 56, 'A PRIORI'),
(17, 5, 56, 57, 'EMERGING'),
(17, 5, 56, 57, 'BACKWARD'),
(17, 5, 57, 58, 'A PRIORI'),
(17, 5, 58, 59, 'A PRIORI'),
(17, 5, 65, 66, 'EMERGING'),
(17, 5, 68, 69, 'A PRIORI'),
(17, 5, 71, 72, 'EMERGING'),
(17, 5, 71, 72, 'BACKWARD'),
(17, 5, 74, 75, 'EMERGING'),
(17, 5, 74, 75, 'BACKWARD'),
(17, 5, 75, 76, 'A PRIORI'),
(17, 5, 78, 79, 'A PRIORI'),
(17, 5, 81, 82, 'EMERGING'),
(17, 5, 83, 84, 'A PRIORI'),
(17, 5, 88, 89, 'A PRIORI'),
(17, 5, 91, 92, 'EMERGING'),
(17, 5, 92, 93, 'A PRIORI'),
(17, 5, 95, 96, 'A PRIORI'),
(17, 5, 100, 101, 'EMERGING'),
(17, 5, 100, 101, 'BACKWARD'),
(17, 5, 101, 102, 'A PRIORI'),
(17, 5, 107, 108, 'EMERGING'),
(17, 5, 108, 109, 'A PRIORI'),
(17, 5, 111, 112, 'A PRIORI'),
(17, 5, 113, 114, 'EMERGING'),
(17, 5, 113, 114, 'BACKWARD'),
(17, 5, 117, 118, 'A PRIORI'),
(17, 5, 121, 122, 'EMERGING'),
(17, 5, 123, 124, 'A PRIORI'),
(17, 5, 124, 125, 'A PRIORI'),
(17, 5, 125, 126, 'A PRIORI'),
(17, 5, 128, 129, 'EMERGING'),
(17, 5, 129, 130, 'A PRIORI'),
(17, 5, 134, 135, 'EMERGING'),
(17, 5, 136, 137, 'A PRIORI'),
(17, 5, 138, 139, 'A PRIORI'),
(17, 5, 141, 142, 'EMERGING'),
(17, 5, 144, 145, 'A PRIORI'),
(17, 5, 145, 146, 'A PRIORI'),
(17, 5, 147, 148, 'A PRIORI'),
(17, 5, 150, 151, 'EMERGING'),
(17, 5, 152, 153, 'A PRIORI'),
(17, 5, 155, 156, 'EMERGING'),
(17, 5, 158, 159, 'EMERGING'),
(17, 5, 159, 160, 'A PRIORI'),
(17, 5, 161, 162, 'EMERGING'),
(17, 5, 164, 165, 'EMERGING'),
(17, 5, 166, 167, 'A PRIORI'),
(17, 5, 174, 175, 'A PRIORI'),
(17, 5, 185, 186, 'A PRIORI'),
(17, 5, 193, 194, 'A PRIORI'),
(17, 5, 198, 199, 'EMERGING'),
(17, 5, 201, 202, 'EMERGING'),
(17, 5, 201, 202, 'BACKWARD'),
(17, 5, 204, 205, 'A PRIORI'),
(17, 5, 207, 208, 'A PRIORI'),
(17, 5, 209, 210, 'EMERGING'),
(17, 5, 209, 210, 'BACKWARD'),
(17, 5, 217, 218, 'EMERGING'),
(17, 5, 220, 221, 'A PRIORI'),
(17, 5, 224, 225, 'A PRIORI'),
(17, 5, 225, 226, 'A PRIORI'),
(17, 5, 227, 228, 'A PRIORI'),
(17, 5, 228, 229, 'EMERGING'),
(17, 5, 229, 230, 'A PRIORI'),
(17, 5, 234, 235, 'A PRIORI'),
(17, 5, 235, 236, 'EMERGING'),
(17, 5, 236, 237, 'A PRIORI'),
(17, 5, 239, 240, 'A PRIORI'),
(17, 5, 242, 243, 'A PRIORI'),
(17, 5, 245, 246, 'A PRIORI'),
(17, 5, 250, 251, 'A PRIORI'),
(17, 5, 253, 254, 'A PRIORI'),
(17, 5, 254, 255, 'EMERGING'),
(17, 5, 254, 255, 'BACKWARD'),
(17, 5, 257, 258, 'A PRIORI'),
(17, 5, 260, 261, 'A PRIORI'),
(17, 5, 265, 266, 'EMERGING'),
(17, 6, 1, 2, 'A PRIORI'),
(17, 6, 2, 3, 'A PRIORI'),
(17, 6, 3, 4, 'A PRIORI'),
(17, 6, 12, 13, 'A PRIORI'),
(17, 6, 14, 15, 'A PRIORI'),
(17, 6, 23, 24, 'A PRIORI'),
(17, 6, 24, 25, 'A PRIORI'),
(17, 6, 27, 28, 'A PRIORI'),
(17, 6, 28, 29, 'A PRIORI'),
(17, 6, 29, 30, 'A PRIORI'),
(17, 6, 34, 35, 'A PRIORI'),
(17, 6, 39, 40, 'A PRIORI'),
(17, 6, 42, 43, 'A PRIORI'),
(17, 6, 43, 44, 'A PRIORI'),
(17, 6, 50, 51, 'A PRIORI'),
(17, 6, 52, 53, 'A PRIORI'),
(17, 6, 54, 55, 'A PRIORI'),
(17, 6, 60, 61, 'EMERGING'),
(17, 6, 60, 61, 'BACKWARD'),
(17, 6, 61, 62, 'A PRIORI'),
(17, 6, 63, 64, 'A PRIORI'),
(17, 6, 64, 65, 'EMERGING'),
(17, 6, 64, 65, 'BACKWARD'),
(17, 6, 67, 68, 'A PRIORI'),
(17, 6, 68, 69, 'A PRIORI'),
(17, 6, 70, 71, 'A PRIORI'),
(17, 6, 78, 79, 'A PRIORI'),
(17, 6, 79, 80, 'A PRIORI'),
(17, 6, 80, 81, 'A PRIORI'),
(17, 6, 85, 86, 'A PRIORI'),
(17, 6, 90, 91, 'A PRIORI'),
(17, 6, 93, 94, 'A PRIORI'),
(17, 6, 94, 95, 'A PRIORI'),
(17, 6, 101, 102, 'A PRIORI'),
(17, 6, 103, 104, 'A PRIORI'),
(17, 6, 105, 106, 'A PRIORI'),
(17, 6, 108, 109, 'A PRIORI'),
(17, 6, 111, 112, 'EMERGING'),
(17, 6, 111, 112, 'BACKWARD'),
(17, 6, 112, 113, 'A PRIORI'),
(17, 6, 114, 115, 'A PRIORI'),
(17, 6, 115, 116, 'EMERGING'),
(17, 6, 115, 116, 'BACKWARD'),
(17, 6, 118, 119, 'A PRIORI'),
(17, 6, 119, 120, 'A PRIORI'),
(17, 6, 122, 123, 'A PRIORI'),
(17, 6, 124, 125, 'A PRIORI'),
(17, 6, 126, 127, 'A PRIORI'),
(17, 6, 130, 131, 'A PRIORI'),
(17, 6, 131, 132, 'EMERGING'),
(17, 6, 131, 132, 'BACKWARD'),
(17, 6, 133, 134, 'A PRIORI'),
(17, 6, 134, 135, 'EMERGING'),
(17, 6, 134, 135, 'BACKWARD'),
(17, 6, 141, 142, 'EMERGING'),
(17, 6, 141, 142, 'BACKWARD'),
(17, 6, 142, 143, 'A PRIORI'),
(17, 6, 144, 145, 'A PRIORI'),
(17, 6, 145, 146, 'A PRIORI'),
(17, 6, 148, 149, 'A PRIORI'),
(17, 6, 150, 151, 'A PRIORI'),
(17, 6, 151, 152, 'A PRIORI'),
(17, 6, 154, 155, 'A PRIORI'),
(17, 6, 157, 158, 'EMERGING'),
(17, 6, 157, 158, 'BACKWARD'),
(17, 6, 158, 159, 'A PRIORI'),
(17, 6, 162, 163, 'A PRIORI'),
(17, 6, 165, 166, 'A PRIORI'),
(17, 6, 167, 168, 'A PRIORI'),
(17, 6, 169, 170, 'A PRIORI'),
(17, 6, 172, 173, 'A PRIORI'),
(17, 6, 176, 177, 'A PRIORI'),
(17, 6, 177, 178, 'A PRIORI'),
(17, 6, 182, 183, 'A PRIORI'),
(17, 6, 184, 185, 'A PRIORI'),
(17, 6, 185, 186, 'A PRIORI'),
(17, 6, 196, 197, 'A PRIORI'),
(17, 6, 197, 198, 'A PRIORI'),
(17, 6, 198, 199, 'EMERGING'),
(17, 6, 198, 199, 'BACKWARD'),
(17, 6, 201, 202, 'A PRIORI'),
(17, 6, 202, 203, 'A PRIORI'),
(17, 6, 203, 204, 'A PRIORI'),
(17, 6, 208, 209, 'A PRIORI'),
(17, 6, 209, 210, 'A PRIORI'),
(17, 6, 210, 211, 'A PRIORI'),
(17, 6, 211, 212, 'EMERGING'),
(17, 6, 211, 212, 'BACKWARD'),
(17, 6, 213, 214, 'A PRIORI'),
(17, 6, 214, 215, 'A PRIORI'),
(17, 6, 215, 216, 'A PRIORI'),
(17, 6, 216, 217, 'A PRIORI'),
(17, 6, 225, 226, 'A PRIORI'),
(17, 6, 226, 227, 'EMERGING'),
(17, 6, 226, 227, 'BACKWARD'),
(17, 6, 231, 232, 'A PRIORI'),
(17, 6, 232, 233, 'A PRIORI'),
(17, 6, 233, 234, 'A PRIORI'),
(17, 6, 236, 237, 'A PRIORI'),
(17, 6, 237, 238, 'A PRIORI'),
(17, 6, 243, 244, 'A PRIORI'),
(17, 6, 246, 247, 'A PRIORI'),
(17, 6, 252, 253, 'A PRIORI'),
(17, 6, 253, 254, 'A PRIORI'),
(17, 6, 256, 257, 'A PRIORI'),
(17, 6, 257, 258, 'EMERGING'),
(17, 6, 257, 258, 'BACKWARD'),
(17, 6, 264, 265, 'A PRIORI'),
(17, 6, 265, 266, 'A PRIORI'),
(17, 6, 266, 267, 'A PRIORI'),
(17, 6, 267, 268, 'A PRIORI'),
(17, 6, 278, 279, 'EMERGING'),
(17, 6, 278, 279, 'BACKWARD'),
(17, 6, 293, 294, 'A PRIORI'),
(17, 6, 295, 296, 'A PRIORI'),
(17, 6, 297, 298, 'A PRIORI'),
(17, 6, 299, 300, 'EMERGING'),
(17, 6, 299, 300, 'BACKWARD'),
(17, 6, 301, 302, 'A PRIORI'),
(17, 6, 302, 303, 'A PRIORI'),
(17, 6, 310, 311, 'EMERGING'),
(17, 6, 310, 311, 'BACKWARD'),
(17, 6, 317, 318, 'A PRIORI'),
(17, 6, 320, 321, 'A PRIORI'),
(17, 6, 322, 323, 'A PRIORI'),
(17, 6, 324, 325, 'A PRIORI'),
(17, 6, 329, 330, 'A PRIORI'),
(17, 6, 330, 331, 'A PRIORI'),
(17, 6, 331, 332, 'EMERGING'),
(17, 6, 331, 332, 'BACKWARD'),
(17, 6, 357, 358, 'A PRIORI'),
(17, 6, 358, 359, 'EMERGING'),
(17, 6, 358, 359, 'BACKWARD'),
(17, 6, 382, 383, 'A PRIORI'),
(17, 6, 383, 384, 'EMERGING'),
(17, 6, 383, 384, 'BACKWARD'),
(17, 6, 416, 417, 'A PRIORI'),
(17, 6, 417, 418, 'EMERGING'),
(17, 6, 417, 418, 'BACKWARD'),
(17, 6, 473, 474, 'A PRIORI'),
(17, 6, 493, 494, 'A PRIORI'),
(17, 6, 494, 495, 'EMERGING'),
(17, 6, 494, 495, 'BACKWARD'),
(17, 6, 500, 501, 'A PRIORI'),
(17, 6, 503, 504, 'A PRIORI'),
(17, 6, 510, 511, 'A PRIORI'),
(17, 6, 511, 512, 'A PRIORI'),
(17, 6, 514, 515, 'A PRIORI'),
(17, 6, 520, 521, 'EMERGING'),
(17, 6, 520, 521, 'BACKWARD'),
(17, 6, 538, 539, 'A PRIORI'),
(17, 6, 551, 552, 'EMERGING'),
(17, 6, 551, 552, 'BACKWARD'),
(17, 6, 552, 553, 'A PRIORI'),
(17, 6, 553, 554, 'A PRIORI'),
(17, 6, 563, 564, 'A PRIORI'),
(17, 6, 579, 580, 'A PRIORI'),
(17, 6, 580, 581, 'A PRIORI'),
(17, 6, 585, 586, 'A PRIORI'),
(17, 6, 586, 587, 'EMERGING'),
(17, 6, 586, 587, 'BACKWARD'),
(17, 6, 592, 593, 'A PRIORI'),
(17, 6, 597, 598, 'A PRIORI'),
(17, 6, 600, 601, 'A PRIORI'),
(17, 6, 601, 602, 'EMERGING'),
(17, 6, 601, 602, 'BACKWARD'),
(17, 6, 604, 605, 'A PRIORI'),
(17, 6, 605, 606, 'A PRIORI'),
(17, 6, 606, 607, 'A PRIORI'),
(17, 6, 625, 626, 'A PRIORI'),
(17, 6, 626, 627, 'EMERGING'),
(17, 6, 626, 627, 'BACKWARD'),
(17, 6, 658, 659, 'A PRIORI'),
(17, 6, 659, 660, 'A PRIORI'),
(17, 6, 671, 672, 'A PRIORI'),
(17, 6, 673, 674, 'A PRIORI'),
(17, 6, 704, 705, 'A PRIORI'),
(17, 6, 712, 713, 'A PRIORI'),
(17, 6, 715, 716, 'A PRIORI'),
(17, 6, 716, 717, 'EMERGING'),
(17, 6, 716, 717, 'BACKWARD'),
(17, 6, 739, 740, 'A PRIORI'),
(19, 1, 1, 2, 'A PRIORI'),
(19, 1, 3, 7, 'EMERGING'),
(19, 1, 8, 17, 'A PRIORI'),
(19, 1, 18, 19, 'A PRIORI'),
(19, 1, 20, 24, 'A PRIORI'),
(19, 1, 29, 31, 'A PRIORI'),
(19, 1, 32, 35, 'EMERGING'),
(19, 1, 39, 40, 'A PRIORI'),
(19, 1, 47, 49, 'A PRIORI'),
(19, 1, 56, 58, 'A PRIORI'),
(19, 1, 63, 67, 'A PRIORI'),
(19, 1, 70, 77, 'EMERGING'),
(19, 1, 102, 103, 'A PRIORI'),
(19, 1, 107, 113, 'EMERGING'),
(19, 1, 116, 123, 'EMERGING'),
(19, 2, 1, 2, 'A PRIORI'),
(19, 2, 4, 8, 'BACKWARD'),
(19, 2, 4, 12, 'EMERGING'),
(19, 2, 15, 16, 'A PRIORI'),
(19, 2, 17, 19, 'EMERGING'),
(19, 2, 22, 24, 'EMERGING'),
(19, 2, 28, 29, 'A PRIORI'),
(19, 2, 36, 39, 'EMERGING'),
(19, 2, 40, 43, 'A PRIORI'),
(19, 2, 45, 46, 'A PRIORI'),
(19, 2, 47, 50, 'A PRIORI'),
(19, 2, 53, 54, 'EMERGING'),
(19, 2, 56, 57, 'A PRIORI'),
(19, 2, 59, 60, 'A PRIORI'),
(19, 2, 61, 62, 'A PRIORI'),
(19, 2, 66, 67, 'A PRIORI'),
(19, 2, 73, 79, 'A PRIORI'),
(19, 2, 81, 83, 'EMERGING'),
(19, 2, 89, 96, 'A PRIORI'),
(19, 2, 97, 98, 'A PRIORI'),
(19, 2, 98, 102, 'A PRIORI'),
(19, 2, 107, 111, 'A PRIORI'),
(19, 2, 112, 115, 'EMERGING'),
(19, 2, 112, 115, 'BACKWARD'),
(19, 2, 118, 122, 'A PRIORI'),
(19, 2, 127, 128, 'A PRIORI'),
(19, 2, 130, 135, 'EMERGING'),
(19, 2, 139, 140, 'A PRIORI'),
(19, 2, 141, 144, 'A PRIORI'),
(19, 2, 147, 148, 'EMERGING'),
(19, 2, 150, 153, 'EMERGING'),
(19, 2, 151, 153, 'FORWARD'),
(19, 2, 156, 159, 'EMERGING'),
(19, 2, 164, 165, 'A PRIORI'),
(19, 2, 171, 180, 'EMERGING'),
(19, 2, 184, 189, 'A PRIORI'),
(19, 2, 192, 195, 'A PRIORI'),
(19, 2, 202, 204, 'EMERGING'),
(19, 2, 206, 209, 'EMERGING'),
(19, 2, 210, 211, 'A PRIORI'),
(19, 2, 212, 214, 'EMERGING'),
(19, 2, 218, 219, 'EMERGING'),
(19, 2, 221, 223, 'A PRIORI'),
(19, 2, 226, 231, 'EMERGING'),
(19, 2, 229, 231, 'FORWARD'),
(19, 2, 235, 237, 'EMERGING'),
(19, 2, 235, 237, 'FORWARD'),
(19, 2, 239, 240, 'A PRIORI'),
(19, 2, 251, 252, 'A PRIORI'),
(19, 2, 253, 256, 'EMERGING'),
(19, 2, 259, 264, 'A PRIORI'),
(19, 2, 264, 265, 'A PRIORI'),
(19, 2, 268, 269, 'A PRIORI'),
(19, 2, 277, 278, 'EMERGING'),
(19, 2, 290, 294, 'EMERGING'),
(19, 2, 302, 304, 'FORWARD'),
(19, 2, 302, 311, 'EMERGING'),
(19, 2, 316, 320, 'EMERGING'),
(19, 2, 320, 321, 'A PRIORI'),
(19, 2, 322, 324, 'EMERGING'),
(19, 3, 1, 2, 'A PRIORI'),
(19, 3, 3, 7, 'EMERGING'),
(19, 3, 3, 7, 'BACKWARD'),
(19, 3, 9, 10, 'A PRIORI'),
(19, 3, 10, 11, 'A PRIORI'),
(19, 3, 12, 16, 'A PRIORI'),
(19, 3, 17, 18, 'A PRIORI'),
(19, 3, 19, 23, 'A PRIORI'),
(19, 3, 29, 30, 'A PRIORI'),
(19, 3, 31, 35, 'A PRIORI'),
(19, 3, 47, 50, 'EMERGING'),
(19, 3, 47, 50, 'BACKWARD'),
(19, 3, 58, 59, 'EMERGING'),
(19, 3, 61, 70, 'A PRIORI'),
(19, 3, 73, 74, 'A PRIORI'),
(19, 3, 76, 84, 'EMERGING'),
(19, 3, 87, 88, 'A PRIORI'),
(19, 3, 91, 96, 'A PRIORI'),
(19, 3, 98, 99, 'A PRIORI'),
(19, 3, 99, 100, 'A PRIORI'),
(19, 3, 101, 106, 'A PRIORI'),
(19, 3, 109, 112, 'A PRIORI'),
(19, 3, 119, 123, 'A PRIORI'),
(19, 3, 125, 126, 'A PRIORI'),
(19, 3, 126, 129, 'A PRIORI'),
(19, 3, 133, 135, 'BACKWARD'),
(19, 3, 133, 141, 'EMERGING'),
(19, 3, 144, 145, 'A PRIORI'),
(19, 3, 146, 150, 'EMERGING'),
(19, 3, 153, 154, 'A PRIORI'),
(19, 3, 154, 158, 'EMERGING'),
(19, 3, 161, 165, 'EMERGING'),
(19, 3, 167, 179, 'A PRIORI'),
(19, 3, 179, 180, 'A PRIORI'),
(19, 3, 181, 183, 'EMERGING'),
(19, 3, 185, 186, 'A PRIORI'),
(19, 3, 188, 189, 'A PRIORI'),
(19, 3, 193, 194, 'A PRIORI'),
(19, 3, 195, 204, 'A PRIORI'),
(19, 3, 206, 207, 'A PRIORI'),
(19, 3, 209, 213, 'EMERGING'),
(19, 3, 215, 216, 'A PRIORI'),
(19, 3, 219, 226, 'EMERGING'),
(19, 3, 229, 231, 'A PRIORI'),
(19, 3, 233, 234, 'A PRIORI'),
(19, 3, 235, 236, 'A PRIORI'),
(19, 3, 236, 240, 'EMERGING'),
(19, 3, 241, 243, 'A PRIORI'),
(19, 3, 256, 260, 'EMERGING'),
(19, 3, 262, 268, 'A PRIORI'),
(19, 3, 270, 272, 'EMERGING'),
(19, 3, 277, 279, 'EMERGING'),
(19, 3, 283, 287, 'A PRIORI'),
(19, 3, 289, 291, 'A PRIORI'),
(19, 3, 293, 296, 'A PRIORI'),
(19, 3, 300, 301, 'A PRIORI'),
(19, 3, 303, 305, 'A PRIORI'),
(19, 3, 319, 322, 'A PRIORI'),
(19, 3, 322, 323, 'A PRIORI'),
(19, 3, 324, 329, 'A PRIORI'),
(19, 3, 331, 337, 'EMERGING'),
(19, 3, 340, 342, 'A PRIORI'),
(19, 3, 343, 346, 'EMERGING'),
(19, 3, 349, 351, 'EMERGING'),
(19, 3, 353, 354, 'A PRIORI'),
(19, 3, 354, 355, 'A PRIORI'),
(19, 4, 1, 2, 'A PRIORI'),
(19, 4, 3, 5, 'A PRIORI'),
(19, 4, 7, 9, 'A PRIORI'),
(19, 4, 10, 12, 'A PRIORI'),
(19, 4, 14, 19, 'EMERGING'),
(19, 4, 21, 24, 'EMERGING'),
(19, 4, 22, 24, 'FORWARD'),
(19, 4, 26, 29, 'EMERGING'),
(19, 4, 29, 30, 'A PRIORI'),
(19, 4, 31, 32, 'A PRIORI'),
(19, 4, 33, 36, 'A PRIORI'),
(19, 4, 38, 46, 'A PRIORI'),
(19, 4, 48, 52, 'EMERGING'),
(19, 4, 56, 62, 'A PRIORI'),
(19, 4, 63, 65, 'A PRIORI'),
(19, 4, 67, 74, 'EMERGING'),
(19, 4, 76, 77, 'A PRIORI'),
(19, 4, 79, 80, 'A PRIORI'),
(19, 4, 82, 84, 'A PRIORI'),
(19, 4, 86, 89, 'EMERGING'),
(19, 4, 91, 95, 'A PRIORI'),
(19, 4, 98, 102, 'A PRIORI'),
(19, 4, 104, 106, 'A PRIORI'),
(19, 4, 108, 113, 'EMERGING'),
(19, 4, 115, 117, 'A PRIORI'),
(19, 4, 119, 125, 'EMERGING'),
(19, 4, 127, 128, 'A PRIORI'),
(19, 4, 130, 135, 'EMERGING'),
(19, 4, 137, 139, 'A PRIORI'),
(19, 4, 140, 144, 'EMERGING'),
(19, 4, 146, 148, 'EMERGING'),
(19, 4, 149, 151, 'EMERGING'),
(19, 4, 153, 154, 'A PRIORI'),
(19, 4, 156, 164, 'A PRIORI'),
(19, 4, 166, 175, 'A PRIORI'),
(19, 4, 177, 179, 'A PRIORI'),
(19, 4, 181, 186, 'EMERGING'),
(19, 4, 191, 194, 'A PRIORI'),
(19, 4, 199, 207, 'A PRIORI'),
(19, 4, 209, 211, 'EMERGING'),
(19, 4, 213, 224, 'EMERGING'),
(19, 4, 226, 232, 'EMERGING'),
(19, 4, 234, 236, 'A PRIORI'),
(19, 4, 238, 240, 'A PRIORI'),
(19, 4, 242, 255, 'EMERGING'),
(19, 4, 258, 263, 'A PRIORI'),
(19, 5, 2, 7, 'A PRIORI'),
(19, 5, 8, 9, 'A PRIORI'),
(19, 5, 12, 23, 'EMERGING'),
(19, 5, 26, 38, 'EMERGING'),
(19, 5, 42, 43, 'A PRIORI'),
(19, 5, 43, 44, 'A PRIORI'),
(19, 5, 53, 60, 'EMERGING'),
(19, 5, 56, 58, 'BACKWARD'),
(19, 5, 65, 72, 'EMERGING'),
(19, 5, 74, 79, 'EMERGING'),
(19, 5, 81, 89, 'EMERGING'),
(19, 5, 91, 98, 'EMERGING'),
(19, 5, 100, 102, 'EMERGING'),
(19, 5, 100, 102, 'BACKWARD'),
(19, 5, 107, 109, 'EMERGING'),
(19, 5, 111, 112, 'A PRIORI'),
(19, 5, 113, 114, 'EMERGING'),
(19, 5, 117, 119, 'A PRIORI'),
(19, 5, 120, 122, 'EMERGING'),
(19, 5, 123, 130, 'EMERGING'),
(19, 5, 134, 135, 'EMERGING'),
(19, 5, 136, 137, 'A PRIORI'),
(19, 5, 138, 139, 'A PRIORI'),
(19, 5, 141, 145, 'EMERGING'),
(19, 5, 145, 146, 'A PRIORI'),
(19, 5, 147, 148, 'EMERGING'),
(19, 5, 150, 151, 'EMERGING'),
(19, 5, 152, 153, 'A PRIORI'),
(19, 5, 155, 159, 'EMERGING'),
(19, 5, 159, 160, 'A PRIORI'),
(19, 5, 161, 162, 'EMERGING'),
(19, 5, 164, 165, 'EMERGING'),
(19, 5, 166, 167, 'A PRIORI'),
(19, 5, 174, 175, 'A PRIORI'),
(19, 5, 185, 186, 'A PRIORI'),
(19, 5, 193, 194, 'A PRIORI'),
(19, 5, 198, 199, 'EMERGING'),
(19, 5, 201, 202, 'EMERGING'),
(19, 5, 204, 205, 'A PRIORI'),
(19, 5, 207, 208, 'A PRIORI'),
(19, 5, 209, 210, 'EMERGING'),
(19, 5, 217, 221, 'EMERGING'),
(19, 5, 223, 225, 'A PRIORI'),
(19, 5, 225, 226, 'A PRIORI'),
(19, 5, 227, 230, 'EMERGING'),
(19, 5, 234, 236, 'EMERGING'),
(19, 5, 239, 246, 'A PRIORI'),
(19, 5, 250, 251, 'A PRIORI'),
(19, 5, 253, 258, 'EMERGING'),
(19, 5, 260, 263, 'A PRIORI'),
(19, 5, 265, 266, 'EMERGING'),
(19, 6, 2, 4, 'A PRIORI'),
(19, 6, 12, 13, 'A PRIORI'),
(19, 6, 14, 15, 'A PRIORI'),
(19, 6, 23, 25, 'A PRIORI'),
(19, 6, 27, 30, 'A PRIORI'),
(19, 6, 34, 35, 'A PRIORI'),
(19, 6, 39, 40, 'A PRIORI'),
(19, 6, 42, 44, 'A PRIORI'),
(19, 6, 50, 57, 'A PRIORI'),
(19, 6, 60, 62, 'EMERGING'),
(19, 6, 60, 62, 'BACKWARD'),
(19, 6, 63, 65, 'EMERGING'),
(19, 6, 67, 69, 'A PRIORI'),
(19, 6, 70, 71, 'A PRIORI'),
(19, 6, 78, 82, 'A PRIORI'),
(19, 6, 85, 86, 'A PRIORI'),
(19, 6, 90, 91, 'A PRIORI'),
(19, 6, 93, 95, 'A PRIORI'),
(19, 6, 101, 108, 'A PRIORI'),
(19, 6, 111, 113, 'EMERGING'),
(19, 6, 111, 113, 'BACKWARD'),
(19, 6, 114, 116, 'EMERGING'),
(19, 6, 118, 120, 'A PRIORI'),
(19, 6, 122, 127, 'A PRIORI'),
(19, 6, 130, 132, 'EMERGING'),
(19, 6, 133, 135, 'EMERGING'),
(19, 6, 141, 143, 'EMERGING'),
(19, 6, 141, 143, 'BACKWARD'),
(19, 6, 144, 146, 'A PRIORI'),
(19, 6, 148, 149, 'A PRIORI'),
(19, 6, 150, 152, 'A PRIORI'),
(19, 6, 156, 159, 'EMERGING'),
(19, 6, 162, 173, 'A PRIORI'),
(19, 6, 176, 178, 'A PRIORI'),
(19, 6, 182, 186, 'A PRIORI'),
(19, 6, 196, 200, 'EMERGING'),
(19, 6, 201, 205, 'A PRIORI'),
(19, 6, 208, 212, 'EMERGING'),
(19, 6, 213, 218, 'A PRIORI'),
(19, 6, 225, 227, 'EMERGING'),
(19, 6, 231, 234, 'A PRIORI'),
(19, 6, 236, 238, 'A PRIORI'),
(19, 6, 240, 247, 'A PRIORI'),
(19, 6, 252, 254, 'A PRIORI'),
(19, 6, 256, 260, 'EMERGING'),
(19, 6, 264, 269, 'A PRIORI'),
(19, 6, 271, 275, 'A PRIORI'),
(19, 6, 277, 281, 'A PRIORI'),
(19, 6, 293, 294, 'A PRIORI'),
(19, 6, 295, 296, 'A PRIORI'),
(19, 6, 297, 298, 'A PRIORI'),
(19, 6, 299, 303, 'EMERGING'),
(19, 6, 309, 311, 'EMERGING'),
(19, 6, 317, 326, 'A PRIORI'),
(19, 6, 329, 332, 'EMERGING'),
(19, 6, 357, 359, 'EMERGING'),
(19, 6, 382, 384, 'EMERGING'),
(19, 6, 416, 418, 'EMERGING'),
(19, 6, 493, 495, 'EMERGING'),
(19, 6, 499, 506, 'A PRIORI'),
(19, 6, 510, 512, 'A PRIORI'),
(19, 6, 514, 516, 'A PRIORI'),
(19, 6, 520, 524, 'EMERGING'),
(19, 6, 538, 539, 'A PRIORI'),
(19, 6, 551, 552, 'EMERGING'),
(19, 6, 552, 553, 'A PRIORI'),
(19, 6, 553, 554, 'A PRIORI'),
(19, 6, 563, 564, 'A PRIORI'),
(19, 6, 579, 580, 'A PRIORI'),
(19, 6, 580, 581, 'EMERGING'),
(19, 6, 585, 586, 'A PRIORI'),
(19, 6, 586, 589, 'EMERGING'),
(19, 6, 600, 602, 'EMERGING'),
(19, 6, 604, 608, 'A PRIORI'),
(19, 6, 625, 627, 'EMERGING'),
(19, 6, 634, 635, 'A PRIORI'),
(19, 6, 654, 656, 'A PRIORI'),
(19, 6, 658, 660, 'A PRIORI'),
(19, 6, 671, 676, 'A PRIORI'),
(19, 6, 704, 705, 'A PRIORI'),
(19, 6, 712, 713, 'A PRIORI'),
(19, 6, 715, 718, 'EMERGING'),
(19, 6, 739, 740, 'A PRIORI'),
(20, 1, 1, 2, 'ENTITY'),
(20, 1, 2, 5, 'RELATION'),
(20, 1, 6, 7, 'ENTITY'),
(20, 1, 8, 17, 'ENTITY'),
(20, 1, 18, 19, 'RELATION'),
(20, 1, 20, 24, 'ENTITY'),
(20, 1, 29, 31, 'ENTITY'),
(20, 1, 31, 34, 'RELATION'),
(20, 1, 34, 35, 'ENTITY'),
(20, 1, 39, 40, 'ENTITY'),
(20, 1, 41, 44, 'ENTITY'),
(20, 1, 44, 46, 'RELATION'),
(20, 1, 47, 49, 'ENTITY'),
(20, 1, 52, 55, 'ENTITY'),
(20, 1, 55, 56, 'RELATION'),
(20, 1, 56, 58, 'ENTITY'),
(20, 1, 60, 61, 'ENTITY'),
(20, 1, 61, 62, 'RELATION'),
(20, 1, 63, 67, 'ENTITY'),
(20, 1, 69, 72, 'RELATION'),
(20, 1, 72, 77, 'ENTITY'),
(20, 1, 102, 103, 'ENTITY'),
(20, 1, 103, 109, 'RELATION'),
(20, 1, 110, 113, 'ENTITY'),
(20, 1, 114, 115, 'ENTITY'),
(20, 1, 115, 118, 'RELATION'),
(20, 1, 118, 123, 'ENTITY'),
(20, 2, 1, 12, 'ENTITY'),
(20, 2, 12, 16, 'RELATION'),
(20, 2, 17, 19, 'ENTITY'),
(20, 2, 22, 24, 'ENTITY'),
(20, 2, 24, 27, 'RELATION'),
(20, 2, 28, 29, 'ENTITY'),
(20, 2, 31, 35, 'RELATION'),
(20, 2, 36, 39, 'ENTITY'),
(20, 2, 40, 43, 'ENTITY'),
(20, 2, 44, 47, 'RELATION'),
(20, 2, 47, 50, 'ENTITY'),
(20, 2, 52, 60, 'ENTITY'),
(20, 2, 60, 61, 'RELATION'),
(20, 2, 61, 62, 'ENTITY'),
(20, 2, 66, 67, 'ENTITY'),
(20, 2, 67, 72, 'RELATION'),
(20, 2, 73, 79, 'ENTITY'),
(20, 2, 81, 83, 'ENTITY'),
(20, 2, 83, 88, 'RELATION'),
(20, 2, 89, 102, 'ENTITY'),
(20, 2, 107, 111, 'ENTITY'),
(20, 2, 111, 114, 'RELATION'),
(20, 2, 114, 115, 'ENTITY'),
(20, 2, 118, 122, 'ENTITY'),
(20, 2, 122, 123, 'RELATION'),
(20, 2, 123, 124, 'ENTITY'),
(20, 2, 127, 129, 'ENTITY'),
(20, 2, 129, 133, 'RELATION'),
(20, 2, 134, 135, 'ENTITY'),
(20, 2, 136, 137, 'ENTITY'),
(20, 2, 137, 140, 'RELATION'),
(20, 2, 141, 148, 'ENTITY'),
(20, 2, 150, 153, 'ENTITY'),
(20, 2, 153, 155, 'RELATION'),
(20, 2, 156, 159, 'ENTITY'),
(20, 2, 171, 180, 'ENTITY'),
(20, 2, 181, 183, 'RELATION'),
(20, 2, 184, 189, 'ENTITY'),
(20, 2, 190, 191, 'RELATION'),
(20, 2, 192, 195, 'ENTITY'),
(20, 2, 197, 199, 'ENTITY'),
(20, 2, 199, 200, 'RELATION'),
(20, 2, 202, 204, 'ENTITY'),
(20, 2, 206, 209, 'ENTITY'),
(20, 2, 209, 212, 'RELATION'),
(20, 2, 212, 214, 'ENTITY'),
(20, 2, 218, 219, 'ENTITY'),
(20, 2, 221, 223, 'ENTITY'),
(20, 2, 223, 225, 'RELATION'),
(20, 2, 226, 231, 'ENTITY'),
(20, 2, 235, 237, 'ENTITY'),
(20, 2, 238, 239, 'RELATION'),
(20, 2, 239, 240, 'ENTITY'),
(20, 2, 251, 252, 'ENTITY'),
(20, 2, 252, 255, 'RELATION'),
(20, 2, 255, 256, 'ENTITY'),
(20, 2, 264, 265, 'ENTITY'),
(20, 2, 265, 268, 'RELATION'),
(20, 2, 268, 269, 'ENTITY'),
(20, 2, 272, 279, 'ENTITY'),
(20, 2, 279, 282, 'RELATION'),
(20, 2, 282, 283, 'ENTITY'),
(20, 2, 285, 287, 'ENTITY'),
(20, 2, 287, 289, 'RELATION'),
(20, 2, 290, 294, 'ENTITY'),
(20, 2, 297, 298, 'ENTITY'),
(20, 2, 298, 300, 'RELATION'),
(20, 2, 301, 311, 'ENTITY'),
(20, 2, 316, 320, 'ENTITY'),
(20, 2, 320, 321, 'RELATION'),
(20, 2, 322, 324, 'ENTITY'),
(20, 3, 1, 2, 'ENTITY'),
(20, 3, 2, 5, 'RELATION'),
(20, 3, 6, 7, 'ENTITY'),
(20, 3, 9, 10, 'ENTITY'),
(20, 3, 10, 11, 'RELATION'),
(20, 3, 12, 16, 'ENTITY'),
(20, 3, 17, 19, 'RELATION'),
(20, 3, 19, 23, 'ENTITY'),
(20, 3, 26, 35, 'ENTITY'),
(20, 3, 35, 36, 'RELATION'),
(20, 3, 36, 38, 'ENTITY'),
(20, 3, 42, 43, 'ENTITY'),
(20, 3, 43, 46, 'RELATION'),
(20, 3, 47, 50, 'ENTITY'),
(20, 3, 54, 55, 'ENTITY'),
(20, 3, 56, 60, 'RELATION'),
(20, 3, 61, 70, 'ENTITY'),
(20, 3, 71, 72, 'RELATION'),
(20, 3, 73, 88, 'ENTITY'),
(20, 3, 91, 96, 'ENTITY'),
(20, 3, 96, 99, 'RELATION'),
(20, 3, 99, 100, 'ENTITY'),
(20, 3, 102, 106, 'ENTITY'),
(20, 3, 106, 107, 'RELATION'),
(20, 3, 109, 112, 'ENTITY'),
(20, 3, 119, 123, 'ENTITY'),
(20, 3, 123, 125, 'RELATION'),
(20, 3, 125, 129, 'ENTITY'),
(20, 3, 133, 141, 'ENTITY'),
(20, 3, 142, 143, 'RELATION'),
(20, 3, 144, 145, 'ENTITY'),
(20, 3, 146, 150, 'ENTITY'),
(20, 3, 150, 154, 'RELATION'),
(20, 3, 154, 158, 'ENTITY'),
(20, 3, 161, 165, 'ENTITY'),
(20, 3, 165, 166, 'RELATION'),
(20, 3, 167, 168, 'ENTITY'),
(20, 3, 171, 179, 'ENTITY'),
(20, 3, 179, 180, 'RELATION'),
(20, 3, 181, 183, 'ENTITY'),
(20, 3, 185, 190, 'ENTITY'),
(20, 3, 190, 191, 'RELATION'),
(20, 3, 193, 204, 'ENTITY'),
(20, 3, 206, 213, 'ENTITY'),
(20, 3, 215, 218, 'RELATION'),
(20, 3, 219, 226, 'ENTITY'),
(20, 3, 233, 234, 'ENTITY'),
(20, 3, 234, 236, 'RELATION'),
(20, 3, 236, 240, 'ENTITY'),
(20, 3, 241, 243, 'ENTITY'),
(20, 3, 255, 256, 'RELATION'),
(20, 3, 256, 260, 'ENTITY'),
(20, 3, 262, 268, 'ENTITY'),
(20, 3, 268, 269, 'RELATION'),
(20, 3, 270, 273, 'ENTITY'),
(20, 3, 289, 291, 'ENTITY'),
(20, 3, 291, 294, 'RELATION'),
(20, 3, 295, 296, 'ENTITY'),
(20, 3, 330, 337, 'ENTITY'),
(20, 3, 337, 338, 'RELATION'),
(20, 3, 338, 342, 'ENTITY'),
(20, 4, 7, 9, 'ENTITY'),
(20, 4, 9, 10, 'RELATION'),
(20, 4, 10, 12, 'ENTITY'),
(20, 4, 14, 19, 'ENTITY'),
(20, 4, 19, 20, 'RELATION'),
(20, 4, 21, 24, 'ENTITY'),
(20, 4, 26, 29, 'ENTITY'),
(20, 4, 29, 30, 'RELATION'),
(20, 4, 31, 32, 'ENTITY'),
(20, 4, 38, 46, 'ENTITY'),
(20, 4, 46, 47, 'RELATION'),
(20, 4, 48, 52, 'ENTITY'),
(20, 4, 53, 54, 'ENTITY'),
(20, 4, 54, 55, 'RELATION'),
(20, 4, 56, 62, 'ENTITY'),
(20, 4, 63, 64, 'RELATION'),
(20, 4, 64, 65, 'ENTITY'),
(20, 4, 66, 67, 'RELATION'),
(20, 4, 67, 74, 'ENTITY'),
(20, 4, 76, 77, 'ENTITY'),
(20, 4, 77, 78, 'RELATION'),
(20, 4, 79, 80, 'ENTITY'),
(20, 4, 86, 89, 'ENTITY'),
(20, 4, 89, 90, 'RELATION'),
(20, 4, 91, 102, 'ENTITY'),
(20, 4, 156, 164, 'ENTITY'),
(20, 4, 164, 165, 'RELATION'),
(20, 4, 166, 175, 'ENTITY'),
(20, 4, 181, 186, 'ENTITY'),
(20, 4, 186, 190, 'RELATION'),
(20, 4, 191, 194, 'ENTITY'),
(20, 4, 197, 199, 'RELATION'),
(20, 4, 199, 207, 'ENTITY'),
(20, 4, 213, 224, 'ENTITY'),
(20, 4, 224, 225, 'RELATION'),
(20, 4, 226, 232, 'ENTITY'),
(20, 4, 242, 255, 'ENTITY'),
(20, 4, 255, 257, 'RELATION'),
(20, 4, 258, 263, 'ENTITY'),
(20, 5, 8, 9, 'ENTITY'),
(20, 5, 9, 11, 'RELATION'),
(20, 5, 12, 23, 'ENTITY'),
(20, 5, 23, 25, 'RELATION'),
(20, 5, 26, 38, 'ENTITY'),
(20, 5, 47, 51, 'ENTITY'),
(20, 5, 51, 52, 'RELATION'),
(20, 5, 53, 60, 'ENTITY'),
(20, 5, 65, 72, 'ENTITY'),
(20, 5, 72, 73, 'RELATION'),
(20, 5, 74, 79, 'ENTITY'),
(20, 5, 81, 89, 'ENTITY'),
(20, 5, 89, 90, 'RELATION'),
(20, 5, 91, 98, 'ENTITY'),
(20, 5, 100, 102, 'ENTITY'),
(20, 5, 102, 106, 'RELATION'),
(20, 5, 107, 109, 'ENTITY'),
(20, 5, 111, 112, 'ENTITY'),
(20, 5, 112, 113, 'RELATION'),
(20, 5, 113, 114, 'ENTITY'),
(20, 5, 115, 116, 'ENTITY'),
(20, 5, 116, 119, 'RELATION'),
(20, 5, 120, 122, 'ENTITY'),
(20, 5, 134, 135, 'ENTITY'),
(20, 5, 135, 136, 'RELATION'),
(20, 5, 136, 139, 'ENTITY'),
(20, 5, 141, 145, 'ENTITY'),
(20, 5, 145, 146, 'RELATION'),
(20, 5, 147, 148, 'ENTITY'),
(20, 5, 150, 151, 'ENTITY'),
(20, 5, 151, 152, 'RELATION'),
(20, 5, 152, 153, 'ENTITY'),
(20, 5, 155, 159, 'ENTITY'),
(20, 5, 159, 160, 'RELATION'),
(20, 5, 161, 162, 'ENTITY'),
(20, 5, 164, 165, 'ENTITY'),
(20, 5, 165, 166, 'RELATION'),
(20, 5, 166, 167, 'ENTITY'),
(20, 5, 172, 173, 'ENTITY'),
(20, 5, 173, 176, 'RELATION'),
(20, 5, 176, 177, 'ENTITY'),
(20, 5, 180, 184, 'ENTITY'),
(20, 5, 184, 187, 'RELATION'),
(20, 5, 187, 191, 'ENTITY'),
(20, 5, 193, 199, 'ENTITY'),
(20, 5, 199, 201, 'RELATION'),
(20, 5, 207, 208, 'ENTITY'),
(20, 5, 208, 209, 'RELATION'),
(20, 5, 209, 210, 'ENTITY'),
(20, 5, 214, 215, 'ENTITY'),
(20, 5, 215, 216, 'RELATION'),
(20, 5, 217, 221, 'ENTITY'),
(20, 5, 223, 225, 'ENTITY'),
(20, 5, 225, 226, 'RELATION'),
(20, 5, 227, 230, 'ENTITY'),
(20, 5, 233, 236, 'ENTITY'),
(20, 5, 236, 238, 'RELATION'),
(20, 5, 239, 246, 'ENTITY'),
(20, 5, 248, 249, 'ENTITY'),
(20, 5, 249, 252, 'RELATION'),
(20, 5, 253, 258, 'ENTITY'),
(20, 5, 259, 263, 'ENTITY'),
(20, 5, 263, 264, 'RELATION'),
(20, 5, 265, 266, 'ENTITY'),
(20, 6, 12, 14, 'ENTITY'),
(20, 6, 14, 15, 'RELATION'),
(20, 6, 15, 18, 'ENTITY'),
(20, 6, 20, 21, 'ENTITY'),
(20, 6, 21, 22, 'RELATION'),
(20, 6, 23, 25, 'ENTITY'),
(20, 6, 27, 31, 'ENTITY'),
(20, 6, 31, 34, 'RELATION'),
(20, 6, 34, 35, 'ENTITY'),
(20, 6, 36, 37, 'ENTITY'),
(20, 6, 37, 41, 'RELATION'),
(20, 6, 42, 44, 'ENTITY'),
(20, 6, 50, 57, 'ENTITY'),
(20, 6, 57, 59, 'RELATION'),
(20, 6, 60, 65, 'ENTITY'),
(20, 6, 67, 70, 'ENTITY'),
(20, 6, 70, 71, 'RELATION'),
(20, 6, 71, 76, 'ENTITY'),
(20, 6, 78, 82, 'ENTITY'),
(20, 6, 82, 85, 'RELATION'),
(20, 6, 85, 86, 'ENTITY'),
(20, 6, 87, 88, 'ENTITY'),
(20, 6, 88, 92, 'RELATION'),
(20, 6, 93, 95, 'ENTITY'),
(20, 6, 101, 108, 'ENTITY'),
(20, 6, 108, 110, 'RELATION'),
(20, 6, 111, 116, 'ENTITY'),
(20, 6, 138, 146, 'ENTITY'),
(20, 6, 146, 148, 'RELATION'),
(20, 6, 148, 149, 'ENTITY'),
(20, 6, 150, 152, 'ENTITY'),
(20, 6, 152, 156, 'RELATION'),
(20, 6, 156, 159, 'ENTITY'),
(20, 6, 162, 173, 'ENTITY'),
(20, 6, 173, 175, 'RELATION'),
(20, 6, 176, 178, 'ENTITY'),
(20, 6, 187, 188, 'ENTITY'),
(20, 6, 188, 190, 'RELATION'),
(20, 6, 190, 200, 'ENTITY'),
(20, 6, 236, 247, 'ENTITY'),
(20, 6, 249, 251, 'RELATION'),
(20, 6, 252, 254, 'ENTITY'),
(20, 6, 256, 260, 'ENTITY'),
(20, 6, 260, 263, 'RELATION'),
(20, 6, 264, 269, 'ENTITY'),
(20, 6, 293, 298, 'ENTITY'),
(20, 6, 298, 301, 'RELATION'),
(20, 6, 301, 303, 'ENTITY'),
(20, 6, 309, 311, 'ENTITY'),
(20, 6, 311, 316, 'RELATION'),
(20, 6, 317, 326, 'ENTITY'),
(20, 6, 338, 355, 'ENTITY'),
(20, 6, 355, 356, 'RELATION'),
(20, 6, 357, 361, 'ENTITY'),
(20, 6, 362, 380, 'ENTITY'),
(20, 6, 380, 381, 'RELATION'),
(20, 6, 382, 384, 'ENTITY'),
(20, 6, 385, 414, 'ENTITY'),
(20, 6, 414, 415, 'RELATION'),
(20, 6, 416, 418, 'ENTITY'),
(20, 6, 419, 491, 'ENTITY'),
(20, 6, 491, 492, 'RELATION'),
(20, 6, 493, 506, 'ENTITY'),
(20, 6, 514, 516, 'ENTITY'),
(20, 6, 516, 520, 'RELATION'),
(20, 6, 520, 524, 'ENTITY'),
(20, 6, 534, 536, 'ENTITY'),
(20, 6, 536, 538, 'RELATION'),
(20, 6, 538, 539, 'ENTITY'),
(20, 6, 547, 552, 'ENTITY'),
(20, 6, 552, 553, 'RELATION'),
(20, 6, 553, 554, 'ENTITY'),
(20, 6, 577, 579, 'ENTITY'),
(20, 6, 579, 580, 'RELATION'),
(20, 6, 580, 581, 'ENTITY'),
(20, 6, 584, 585, 'ENTITY'),
(20, 6, 585, 588, 'RELATION'),
(20, 6, 588, 589, 'ENTITY'),
(20, 6, 600, 608, 'ENTITY'),
(20, 6, 608, 612, 'RELATION'),
(20, 6, 612, 622, 'ENTITY'),
(20, 6, 625, 632, 'ENTITY'),
(20, 6, 632, 636, 'RELATION'),
(20, 6, 636, 651, 'ENTITY'),
(20, 6, 668, 669, 'ENTITY'),
(20, 6, 669, 670, 'RELATION'),
(20, 6, 671, 701, 'ENTITY'),
(20, 6, 704, 711, 'ENTITY'),
(20, 6, 711, 714, 'RELATION'),
(20, 6, 715, 734, 'ENTITY'),
(21, 1, 0, 1, 'EMERGING'),
(21, 1, 3, 4, 'A PRIORI'),
(21, 1, 4, 5, 'A PRIORI'),
(21, 1, 6, 7, 'A PRIORI'),
(21, 1, 9, 10, 'A PRIORI'),
(21, 1, 11, 12, 'EMERGING'),
(21, 1, 11, 12, 'FORWARD'),
(21, 1, 12, 13, 'A PRIORI'),
(21, 1, 14, 15, 'A PRIORI'),
(21, 1, 18, 19, 'A PRIORI'),
(21, 2, 0, 1, 'EMERGING'),
(21, 2, 3, 4, 'A PRIORI'),
(21, 2, 5, 6, 'A PRIORI'),
(21, 2, 7, 8, 'EMERGING'),
(21, 2, 10, 11, 'A PRIORI'),
(21, 2, 13, 14, 'EMERGING'),
(21, 2, 14, 15, 'A PRIORI'),
(21, 2, 17, 18, 'A PRIORI'),
(21, 2, 18, 19, 'A PRIORI'),
(21, 2, 20, 21, 'EMERGING'),
(21, 2, 20, 21, 'BACKWARD'),
(21, 2, 21, 22, 'A PRIORI'),
(22, 1, 0, 1, 'EMERGING'),
(22, 1, 3, 5, 'A PRIORI'),
(22, 1, 9, 15, 'EMERGING'),
(22, 1, 11, 13, 'FORWARD'),
(22, 1, 18, 19, 'A PRIORI'),
(22, 2, 0, 1, 'EMERGING'),
(22, 2, 3, 6, 'A PRIORI'),
(22, 2, 7, 8, 'EMERGING'),
(22, 2, 13, 15, 'EMERGING'),
(22, 2, 17, 22, 'A PRIORI'),
(22, 2, 20, 22, 'BACKWARD');

-- --------------------------------------------------------

--
-- Table structure for table `document`
--

DROP TABLE IF EXISTS `document`;
CREATE TABLE `document` (
  `id` int(10) UNSIGNED NOT NULL,
  `title` varchar(45) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `date_edited` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `date_created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Truncate table before insert `document`
--

TRUNCATE TABLE `document`;
--
-- Dumping data for table `document`
--

INSERT INTO `document` (`id`, `title`) VALUES
(1, 'Closures (No Annotations)'),
(17, 'Closures - Low Level Concepts'),
(19, 'Closures - High Level Concepts'),
(20, 'Closures - Relations'),
(21, 'Bread - Low Level Concepts'),
(22, 'Bread - High Level Concepts'),
(23, 'Bread (No Annotations)');

-- --------------------------------------------------------

--
-- Table structure for table `section`
--

DROP TABLE IF EXISTS `section`;
CREATE TABLE `section` (
  `document_id` int(10) UNSIGNED NOT NULL,
  `section_number` int(11) UNSIGNED NOT NULL,
  `title` varchar(45) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `text` text CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci ROW_FORMAT=COMPACT;

--
-- Truncate table before insert `section`
--

TRUNCATE TABLE `section`;
--
-- Dumping data for table `section`
--

INSERT INTO `section` (`document_id`, `section_number`, `title`, `text`) VALUES
(1, 1, 'Closure (mathematics)', 'A set is closed under an operation if performance of that operation on members of the set always produces a member\nof that set. For example, the positive integers are closed under addition, but not under subtraction: 1 - 2 is not a\npositive integer even though both 1 and 2 are positive integers. Another example is the set containing only zero, which\nis closed under addition, subtraction and multiplication (because 0 + 0 = 0, 0 - 0 = 0, and 0 × 0 = 0).\nSimilarly, a set is said to be closed under a collection of operations if it is closed under each of the operations\nindividually.'),
(1, 2, 'Basic properties', 'A set that is closed under an operation or collection of operations is said to satisfy a closure property. Often a\nclosure property is introduced as an axiom, which is then usually called the axiom of closure. Modern set-theoretic\ndefinitions usually define operations as maps between sets, so adding closure to a structure as an axiom is superfluous;\nhowever in practice operations are often defined initially on a superset of the set in question and a closure proof is\nrequired to establish that the operation applied to pairs from that set only produces members of that set. For example,\nthe set of even integers is closed under addition, but the set of odd integers is not.\nWhen a set S is not closed under some operations, one can usually find the smallest set containing S that is closed.\nThis smallest closed set is called the closure of S (with respect to these operations). For example, the closure under\nsubtraction of the set of natural numbers, viewed as a subset of the real numbers, is the set of integers. An important\nexample is that of topological closure. The notion of closure is generalized by Galois connection, and further by\nmonads.\nThe set S must be a subset of a closed set in order for the closure operator to be defined. In the preceding example, it is\nimportant that the reals are closed under subtraction; in the domain of the natural numbers subtraction is not always\ndefined.\nThe two uses of the word \"closure\" should not be confused. The former usage refers to the property of being closed,\nand the latter refers to the smallest closed set containing one that may not be closed. In short, the closure of a set\nsatisfies a closure property.'),
(1, 3, 'Closed sets', 'A set is closed under an operation if the operation returns a member of the set when evaluated on members of the set.\nSometimes the requirement that the operation be valued in a set is explicitly stated, in which case it is known as the\naxiom of closure. For example, one may define a group as a set with a binary product operator obeying several\naxioms, including an axiom that the product of any two elements of the group is again an element. However the\nmodern definition of an operation makes this axiom superfluous; an n-ary operation on S is just a subset of Sn+1. By its\nvery definition, an operator on a set cannot have values outside the set.\nNevertheless, the closure property of an operator on a set still has some utility. Closure on a set does not necessarily\nimply closure on all subsets. Thus a subgroup of a group is a subset on which the binary product and the unary\noperation of inversion satisfy the closure axiom.\nAn operation of a different sort is that of finding the limit points of a subset of a topological space. A set that is closed\nunder this operation is usually referred to as a closed set in the context of topology. Without any further qualification,\nthe phrase usually means closed in this sense. Closed intervals like [1,2] = {x : 1 ≤ x ≤ 2} are closed in this sense.\nA subset of a partially ordered set is a downward closed set (also called a lower set) if for every element of the\nsubset, all smaller elements are also in the subset. This applies for example to the real intervals (−∞, p) and (−∞, p],\nand for an ordinal number p represented as interval [0, p). Every downward closed set of ordinal numbers is itself an\nordinal number. Upward closed sets (also called upper sets) are defined similarly.'),
(1, 4, 'Examples', 'In topology and related branches, the relevant operation is taking limits. The topological closure of a set is the\ncorresponding closure operator. The Kuratowski closure axioms characterize this operator.\nIn linear algebra, the linear span of a set X of vectors is the closure of that set; it is the smallest subset of the\nvector space that includes X and is closed under the operation of linear combination. This subset is a subspace.\nIn matroid theory, the closure of X is the largest superset of X that has the same rank as X.\nIn set theory, the transitive closure of a set.\nIn set theory, the transitive closure of a binary relation.\nIn algebra, the algebraic closure of a field.\nIn commutative algebra, closure operations for ideals, as integral closure and tight closure.\nIn geometry, the convex hull of a set S of points is the smallest convex set of which S is a subset.\nIn formal languages, the Kleene closure of a language can be described as the set of strings that can be made by\nconcatenating zero or more strings from that language.\nIn group theory, the conjugate closure or normal closure of a set of group elements is the smallest normal\nsubgroup containing the set.\nIn mathematical analysis and in probability theory, the closure of a collection of subsets of X under countably\nmany set operations is called the σ-algebra generated by the collection.'),
(1, 5, 'Closure operator', 'Given an operation on a set X, one can define the closure C(S) of a subset S of X to be the smallest subset closed under\nthat operation that contains S as a subset, if any such subsets exist. Consequently, C(S) is the intersection of all closed\nsets containing S. For example, the closure of a subset of a group is the subgroup generated by that set.\nThe closure of sets with respect to some operation defines a closure operator on the subsets of X. The closed sets\ncan be determined from the closure operator; a set is closed if it is equal to its own closure. Typical structural\nproperties of all closure operations are: [1]\nThe closure is increasing or extensive: the closure of an object contains the object.\nThe closure is idempotent: the closure of the closure equals the closure.\nThe closure is monotone, that is, if X is contained in Y, then also C(X) is contained in C(Y).\nAn object that is its own closure is called closed. By idempotency, an object is closed if and only if it is the closure of\nsome object.\nThese three properties define an abstract closure operator. Typically, an abstract closure acts on the class of all\nsubsets of a set.\nIf X is contained in a set closed under the operation then every subset of X has a closure.'),
(1, 6, 'Binary relation closures', 'Consider first homogeneous relations R ⊆ A × A. If a relation S satisfies aSb ⇒ bSa, then it is a symmetric relation. An\narbitrary homogeneous relation R may not be symmetric but it is always contained in some symmetric relation: R ⊆ S.\nThe operation of finding the smallest such S corresponds to a closure operator called symmetric closure.\nA transitive relation T satisfies aTb ∧ bTc ⇒ aTc. An arbitrary homogeneous relation R may not be transitive but it is\nalways contained in some transitive relation: R ⊆ T. The operation of finding the smallest such T corresponds to a\nclosure operator called transitive closure.\nAmong heterogeneous relations there are properties of difunctionality and contact which lead to difunctional\nclosure and contact closure.[2] The presence of these closure operators in binary relations leads to topology since\nopen-set axioms may be replaced by Kuratowski closure axioms. Thus each property P, symmetry, transitivity,\ndifunctionality, or contact corresponds to a relational topology.[3]\nIn the theory of rewriting systems, one often uses more wordy notions such as the reflexive transitive closure R*—\nthe smallest preorder containing R, or the reflexive transitive symmetric closure R≡—the smallest equivalence\nrelation containing R, and therefore also known as the equivalence closure. When considering a particular term\nalgebra, an equivalence relation that is compatible with all operations of the algebra [note 1] is called a congruence\nrelation. The congruence closure of R is defined as the smallest congruence relation containing R.\nFor arbitrary P and R, the P closure of R need not exist. In the above examples, these exist because reflexivity,\ntransitivity and symmetry are closed under arbitrary intersections. In such cases, the P closure can be directly defined\nas the intersection of all sets with property P containing R.[4]\nSome important particular closures can be constructively obtained as follows:\nclref(R) = R ∪ { ⟨x,x⟩ : x ∈ S } is the reflexive closure of R,\nclsym(R) = R ∪ { ⟨y,x⟩ : ⟨x,y⟩ ∈ R } is its symmetric closure,\ncltrn(R) = R ∪ { ⟨x1,xn⟩ : n >1 ∧ ⟨x1,x2⟩, ..., ⟨xn-1,xn⟩ ∈ R } is its transitive closure,\nclemb,Σ(R) = R ∪ { ⟨f(x1,…,xi-1,xi,xi+1,…,xn), f(x1,…,xi-1,y,xi+1,…,xn)⟩ : ⟨xi,y⟩ ∈ R ∧ f ∈ Σ n-ary ∧ 1 ≤ i ≤ n ∧ x1,...,xn ∈\nS } is its embedding closure with respect to a given set Σ of operations on S, each with a fixed arity.\nThe relation R is said to have closure under some clxxx, if R = clxxx(R); for example R is called symmetric if R =\nclsym(R).\nAny of these four closures preserves symmetry, i.e., if R is symmetric, so is any clxxx(R). [note 2] Similarly, all four\npreserve reflexivity. Moreover, cltrn preserves closure under clemb,Σ for arbitrary Σ. As a consequence, the equivalence\nclosure of an arbitrary binary relation R can be obtained as cltrn(clsym(clref(R))), and the congruence closure with\nrespect to some Σ can be obtained as cltrn(clemb,Σ(clsym(clref(R)))). In the latter case, the nesting order does matter; e.g.\nif S is the set of terms over Σ = { a, b, c, f } and R = { ⟨a,b⟩, ⟨f(b),c⟩ }, then the pair ⟨f(a),c⟩ is contained in the\ncongruence closure cltrn(clemb,Σ(clsym(clref(R)))) of R, but not in the relation clemb,Σ(cltrn(clsym(clref(R)))).'),
(17, 1, 'Closure (mathematics)', 'A set is closed under an operation if performance of that operation on members of the set always produces a member\nof that set. For example, the positive integers are closed under addition, but not under subtraction: 1 - 2 is not a\npositive integer even though both 1 and 2 are positive integers. Another example is the set containing only zero, which\nis closed under addition, subtraction and multiplication (because 0 + 0 = 0, 0 - 0 = 0, and 0 × 0 = 0).\nSimilarly, a set is said to be closed under a collection of operations if it is closed under each of the operations\nindividually.'),
(17, 2, 'Basic properties', 'A set that is closed under an operation or collection of operations is said to satisfy a closure property. Often a\nclosure property is introduced as an axiom, which is then usually called the axiom of closure. Modern set-theoretic\ndefinitions usually define operations as maps between sets, so adding closure to a structure as an axiom is superfluous;\nhowever in practice operations are often defined initially on a superset of the set in question and a closure proof is\nrequired to establish that the operation applied to pairs from that set only produces members of that set. For example,\nthe set of even integers is closed under addition, but the set of odd integers is not.\nWhen a set S is not closed under some operations, one can usually find the smallest set containing S that is closed.\nThis smallest closed set is called the closure of S (with respect to these operations). For example, the closure under\nsubtraction of the set of natural numbers, viewed as a subset of the real numbers, is the set of integers. An important\nexample is that of topological closure. The notion of closure is generalized by Galois connection, and further by\nmonads.\nThe set S must be a subset of a closed set in order for the closure operator to be defined. In the preceding example, it is\nimportant that the reals are closed under subtraction; in the domain of the natural numbers subtraction is not always\ndefined.\nThe two uses of the word \"closure\" should not be confused. The former usage refers to the property of being closed,\nand the latter refers to the smallest closed set containing one that may not be closed. In short, the closure of a set\nsatisfies a closure property.'),
(17, 3, 'Closed sets', 'A set is closed under an operation if the operation returns a member of the set when evaluated on members of the set.\nSometimes the requirement that the operation be valued in a set is explicitly stated, in which case it is known as the\naxiom of closure. For example, one may define a group as a set with a binary product operator obeying several\naxioms, including an axiom that the product of any two elements of the group is again an element. However the\nmodern definition of an operation makes this axiom superfluous; an n-ary operation on S is just a subset of Sn+1. By its\nvery definition, an operator on a set cannot have values outside the set.\nNevertheless, the closure property of an operator on a set still has some utility. Closure on a set does not necessarily\nimply closure on all subsets. Thus a subgroup of a group is a subset on which the binary product and the unary\noperation of inversion satisfy the closure axiom.\nAn operation of a different sort is that of finding the limit points of a subset of a topological space. A set that is closed\nunder this operation is usually referred to as a closed set in the context of topology. Without any further qualification,\nthe phrase usually means closed in this sense. Closed intervals like [1,2] = {x : 1 ≤ x ≤ 2} are closed in this sense.\nA subset of a partially ordered set is a downward closed set (also called a lower set) if for every element of the\nsubset, all smaller elements are also in the subset. This applies for example to the real intervals (−∞, p) and (−∞, p],\nand for an ordinal number p represented as interval [0, p). Every downward closed set of ordinal numbers is itself an\nordinal number. Upward closed sets (also called upper sets) are defined similarly.'),
(17, 4, 'Examples', 'In topology and related branches, the relevant operation is taking limits. The topological closure of a set is the\ncorresponding closure operator. The Kuratowski closure axioms characterize this operator.\nIn linear algebra, the linear span of a set X of vectors is the closure of that set; it is the smallest subset of the\nvector space that includes X and is closed under the operation of linear combination. This subset is a subspace.\nIn matroid theory, the closure of X is the largest superset of X that has the same rank as X.\nIn set theory, the transitive closure of a set.\nIn set theory, the transitive closure of a binary relation.\nIn algebra, the algebraic closure of a field.\nIn commutative algebra, closure operations for ideals, as integral closure and tight closure.\nIn geometry, the convex hull of a set S of points is the smallest convex set of which S is a subset.\nIn formal languages, the Kleene closure of a language can be described as the set of strings that can be made by\nconcatenating zero or more strings from that language.\nIn group theory, the conjugate closure or normal closure of a set of group elements is the smallest normal\nsubgroup containing the set.\nIn mathematical analysis and in probability theory, the closure of a collection of subsets of X under countably\nmany set operations is called the σ-algebra generated by the collection.'),
(17, 5, 'Closure operator', 'Given an operation on a set X, one can define the closure C(S) of a subset S of X to be the smallest subset closed under\nthat operation that contains S as a subset, if any such subsets exist. Consequently, C(S) is the intersection of all closed\nsets containing S. For example, the closure of a subset of a group is the subgroup generated by that set.\nThe closure of sets with respect to some operation defines a closure operator on the subsets of X. The closed sets\ncan be determined from the closure operator; a set is closed if it is equal to its own closure. Typical structural\nproperties of all closure operations are: [1]\nThe closure is increasing or extensive: the closure of an object contains the object.\nThe closure is idempotent: the closure of the closure equals the closure.\nThe closure is monotone, that is, if X is contained in Y, then also C(X) is contained in C(Y).\nAn object that is its own closure is called closed. By idempotency, an object is closed if and only if it is the closure of\nsome object.\nThese three properties define an abstract closure operator. Typically, an abstract closure acts on the class of all\nsubsets of a set.\nIf X is contained in a set closed under the operation then every subset of X has a closure.'),
(17, 6, 'Binary relation closures', 'Consider first homogeneous relations R ⊆ A × A. If a relation S satisfies aSb ⇒ bSa, then it is a symmetric relation. An\narbitrary homogeneous relation R may not be symmetric but it is always contained in some symmetric relation: R ⊆ S.\nThe operation of finding the smallest such S corresponds to a closure operator called symmetric closure.\nA transitive relation T satisfies aTb ∧ bTc ⇒ aTc. An arbitrary homogeneous relation R may not be transitive but it is\nalways contained in some transitive relation: R ⊆ T. The operation of finding the smallest such T corresponds to a\nclosure operator called transitive closure.\nAmong heterogeneous relations there are properties of difunctionality and contact which lead to difunctional\nclosure and contact closure.[2] The presence of these closure operators in binary relations leads to topology since\nopen-set axioms may be replaced by Kuratowski closure axioms. Thus each property P, symmetry, transitivity,\ndifunctionality, or contact corresponds to a relational topology.[3]\nIn the theory of rewriting systems, one often uses more wordy notions such as the reflexive transitive closure R*—\nthe smallest preorder containing R, or the reflexive transitive symmetric closure R≡—the smallest equivalence\nrelation containing R, and therefore also known as the equivalence closure. When considering a particular term\nalgebra, an equivalence relation that is compatible with all operations of the algebra [note 1] is called a congruence\nrelation. The congruence closure of R is defined as the smallest congruence relation containing R.\nFor arbitrary P and R, the P closure of R need not exist. In the above examples, these exist because reflexivity,\ntransitivity and symmetry are closed under arbitrary intersections. In such cases, the P closure can be directly defined\nas the intersection of all sets with property P containing R.[4]\nSome important particular closures can be constructively obtained as follows:\nclref(R) = R ∪ { ⟨x,x⟩ : x ∈ S } is the reflexive closure of R,\nclsym(R) = R ∪ { ⟨y,x⟩ : ⟨x,y⟩ ∈ R } is its symmetric closure,\ncltrn(R) = R ∪ { ⟨x1,xn⟩ : n >1 ∧ ⟨x1,x2⟩, ..., ⟨xn-1,xn⟩ ∈ R } is its transitive closure,\nclemb,Σ(R) = R ∪ { ⟨f(x1,…,xi-1,xi,xi+1,…,xn), f(x1,…,xi-1,y,xi+1,…,xn)⟩ : ⟨xi,y⟩ ∈ R ∧ f ∈ Σ n-ary ∧ 1 ≤ i ≤ n ∧ x1,...,xn ∈\nS } is its embedding closure with respect to a given set Σ of operations on S, each with a fixed arity.\nThe relation R is said to have closure under some clxxx, if R = clxxx(R); for example R is called symmetric if R =\nclsym(R).\nAny of these four closures preserves symmetry, i.e., if R is symmetric, so is any clxxx(R). [note 2] Similarly, all four\npreserve reflexivity. Moreover, cltrn preserves closure under clemb,Σ for arbitrary Σ. As a consequence, the equivalence\nclosure of an arbitrary binary relation R can be obtained as cltrn(clsym(clref(R))), and the congruence closure with\nrespect to some Σ can be obtained as cltrn(clemb,Σ(clsym(clref(R)))). In the latter case, the nesting order does matter; e.g.\nif S is the set of terms over Σ = { a, b, c, f } and R = { ⟨a,b⟩, ⟨f(b),c⟩ }, then the pair ⟨f(a),c⟩ is contained in the\ncongruence closure cltrn(clemb,Σ(clsym(clref(R)))) of R, but not in the relation clemb,Σ(cltrn(clsym(clref(R)))).'),
(19, 1, 'Closure (mathematics)', 'A set is closed under an operation if performance of that operation on members of the set always produces a member\nof that set. For example, the positive integers are closed under addition, but not under subtraction: 1 - 2 is not a\npositive integer even though both 1 and 2 are positive integers. Another example is the set containing only zero, which\nis closed under addition, subtraction and multiplication (because 0 + 0 = 0, 0 - 0 = 0, and 0 × 0 = 0).\nSimilarly, a set is said to be closed under a collection of operations if it is closed under each of the operations\nindividually.'),
(19, 2, 'Basic properties', 'A set that is closed under an operation or collection of operations is said to satisfy a closure property. Often a\nclosure property is introduced as an axiom, which is then usually called the axiom of closure. Modern set-theoretic\ndefinitions usually define operations as maps between sets, so adding closure to a structure as an axiom is superfluous;\nhowever in practice operations are often defined initially on a superset of the set in question and a closure proof is\nrequired to establish that the operation applied to pairs from that set only produces members of that set. For example,\nthe set of even integers is closed under addition, but the set of odd integers is not.\nWhen a set S is not closed under some operations, one can usually find the smallest set containing S that is closed.\nThis smallest closed set is called the closure of S (with respect to these operations). For example, the closure under\nsubtraction of the set of natural numbers, viewed as a subset of the real numbers, is the set of integers. An important\nexample is that of topological closure. The notion of closure is generalized by Galois connection, and further by\nmonads.\nThe set S must be a subset of a closed set in order for the closure operator to be defined. In the preceding example, it is\nimportant that the reals are closed under subtraction; in the domain of the natural numbers subtraction is not always\ndefined.\nThe two uses of the word \"closure\" should not be confused. The former usage refers to the property of being closed,\nand the latter refers to the smallest closed set containing one that may not be closed. In short, the closure of a set\nsatisfies a closure property.'),
(19, 3, 'Closed sets', 'A set is closed under an operation if the operation returns a member of the set when evaluated on members of the set.\nSometimes the requirement that the operation be valued in a set is explicitly stated, in which case it is known as the\naxiom of closure. For example, one may define a group as a set with a binary product operator obeying several\naxioms, including an axiom that the product of any two elements of the group is again an element. However the\nmodern definition of an operation makes this axiom superfluous; an n-ary operation on S is just a subset of Sn+1. By its\nvery definition, an operator on a set cannot have values outside the set.\nNevertheless, the closure property of an operator on a set still has some utility. Closure on a set does not necessarily\nimply closure on all subsets. Thus a subgroup of a group is a subset on which the binary product and the unary\noperation of inversion satisfy the closure axiom.\nAn operation of a different sort is that of finding the limit points of a subset of a topological space. A set that is closed\nunder this operation is usually referred to as a closed set in the context of topology. Without any further qualification,\nthe phrase usually means closed in this sense. Closed intervals like [1,2] = {x : 1 ≤ x ≤ 2} are closed in this sense.\nA subset of a partially ordered set is a downward closed set (also called a lower set) if for every element of the\nsubset, all smaller elements are also in the subset. This applies for example to the real intervals (−∞, p) and (−∞, p],\nand for an ordinal number p represented as interval [0, p). Every downward closed set of ordinal numbers is itself an\nordinal number. Upward closed sets (also called upper sets) are defined similarly.'),
(19, 4, 'Examples', 'In topology and related branches, the relevant operation is taking limits. The topological closure of a set is the\ncorresponding closure operator. The Kuratowski closure axioms characterize this operator.\nIn linear algebra, the linear span of a set X of vectors is the closure of that set; it is the smallest subset of the\nvector space that includes X and is closed under the operation of linear combination. This subset is a subspace.\nIn matroid theory, the closure of X is the largest superset of X that has the same rank as X.\nIn set theory, the transitive closure of a set.\nIn set theory, the transitive closure of a binary relation.\nIn algebra, the algebraic closure of a field.\nIn commutative algebra, closure operations for ideals, as integral closure and tight closure.\nIn geometry, the convex hull of a set S of points is the smallest convex set of which S is a subset.\nIn formal languages, the Kleene closure of a language can be described as the set of strings that can be made by\nconcatenating zero or more strings from that language.\nIn group theory, the conjugate closure or normal closure of a set of group elements is the smallest normal\nsubgroup containing the set.\nIn mathematical analysis and in probability theory, the closure of a collection of subsets of X under countably\nmany set operations is called the σ-algebra generated by the collection.'),
(19, 5, 'Closure operator', 'Given an operation on a set X, one can define the closure C(S) of a subset S of X to be the smallest subset closed under\nthat operation that contains S as a subset, if any such subsets exist. Consequently, C(S) is the intersection of all closed\nsets containing S. For example, the closure of a subset of a group is the subgroup generated by that set.\nThe closure of sets with respect to some operation defines a closure operator on the subsets of X. The closed sets\ncan be determined from the closure operator; a set is closed if it is equal to its own closure. Typical structural\nproperties of all closure operations are: [1]\nThe closure is increasing or extensive: the closure of an object contains the object.\nThe closure is idempotent: the closure of the closure equals the closure.\nThe closure is monotone, that is, if X is contained in Y, then also C(X) is contained in C(Y).\nAn object that is its own closure is called closed. By idempotency, an object is closed if and only if it is the closure of\nsome object.\nThese three properties define an abstract closure operator. Typically, an abstract closure acts on the class of all\nsubsets of a set.\nIf X is contained in a set closed under the operation then every subset of X has a closure.'),
(19, 6, 'Binary relation closures', 'Consider first homogeneous relations R ⊆ A × A. If a relation S satisfies aSb ⇒ bSa, then it is a symmetric relation. An\narbitrary homogeneous relation R may not be symmetric but it is always contained in some symmetric relation: R ⊆ S.\nThe operation of finding the smallest such S corresponds to a closure operator called symmetric closure.\nA transitive relation T satisfies aTb ∧ bTc ⇒ aTc. An arbitrary homogeneous relation R may not be transitive but it is\nalways contained in some transitive relation: R ⊆ T. The operation of finding the smallest such T corresponds to a\nclosure operator called transitive closure.\nAmong heterogeneous relations there are properties of difunctionality and contact which lead to difunctional\nclosure and contact closure.[2] The presence of these closure operators in binary relations leads to topology since\nopen-set axioms may be replaced by Kuratowski closure axioms. Thus each property P, symmetry, transitivity,\ndifunctionality, or contact corresponds to a relational topology.[3]\nIn the theory of rewriting systems, one often uses more wordy notions such as the reflexive transitive closure R*—\nthe smallest preorder containing R, or the reflexive transitive symmetric closure R≡—the smallest equivalence\nrelation containing R, and therefore also known as the equivalence closure. When considering a particular term\nalgebra, an equivalence relation that is compatible with all operations of the algebra [note 1] is called a congruence\nrelation. The congruence closure of R is defined as the smallest congruence relation containing R.\nFor arbitrary P and R, the P closure of R need not exist. In the above examples, these exist because reflexivity,\ntransitivity and symmetry are closed under arbitrary intersections. In such cases, the P closure can be directly defined\nas the intersection of all sets with property P containing R.[4]\nSome important particular closures can be constructively obtained as follows:\nclref(R) = R ∪ { ⟨x,x⟩ : x ∈ S } is the reflexive closure of R,\nclsym(R) = R ∪ { ⟨y,x⟩ : ⟨x,y⟩ ∈ R } is its symmetric closure,\ncltrn(R) = R ∪ { ⟨x1,xn⟩ : n >1 ∧ ⟨x1,x2⟩, ..., ⟨xn-1,xn⟩ ∈ R } is its transitive closure,\nclemb,Σ(R) = R ∪ { ⟨f(x1,…,xi-1,xi,xi+1,…,xn), f(x1,…,xi-1,y,xi+1,…,xn)⟩ : ⟨xi,y⟩ ∈ R ∧ f ∈ Σ n-ary ∧ 1 ≤ i ≤ n ∧ x1,...,xn ∈\nS } is its embedding closure with respect to a given set Σ of operations on S, each with a fixed arity.\nThe relation R is said to have closure under some clxxx, if R = clxxx(R); for example R is called symmetric if R =\nclsym(R).\nAny of these four closures preserves symmetry, i.e., if R is symmetric, so is any clxxx(R). [note 2] Similarly, all four\npreserve reflexivity. Moreover, cltrn preserves closure under clemb,Σ for arbitrary Σ. As a consequence, the equivalence\nclosure of an arbitrary binary relation R can be obtained as cltrn(clsym(clref(R))), and the congruence closure with\nrespect to some Σ can be obtained as cltrn(clemb,Σ(clsym(clref(R)))). In the latter case, the nesting order does matter; e.g.\nif S is the set of terms over Σ = { a, b, c, f } and R = { ⟨a,b⟩, ⟨f(b),c⟩ }, then the pair ⟨f(a),c⟩ is contained in the\ncongruence closure cltrn(clemb,Σ(clsym(clref(R)))) of R, but not in the relation clemb,Σ(cltrn(clsym(clref(R)))).'),
(20, 1, 'Closure (mathematics)', 'A set is closed under an operation if performance of that operation on members of the set always produces a member\nof that set. For example, the positive integers are closed under addition, but not under subtraction: 1 - 2 is not a\npositive integer even though both 1 and 2 are positive integers. Another example is the set containing only zero, which\nis closed under addition, subtraction and multiplication (because 0 + 0 = 0, 0 - 0 = 0, and 0 × 0 = 0).\nSimilarly, a set is said to be closed under a collection of operations if it is closed under each of the operations\nindividually.'),
(20, 2, 'Basic properties', 'A set that is closed under an operation or collection of operations is said to satisfy a closure property. Often a\nclosure property is introduced as an axiom, which is then usually called the axiom of closure. Modern set-theoretic\ndefinitions usually define operations as maps between sets, so adding closure to a structure as an axiom is superfluous;\nhowever in practice operations are often defined initially on a superset of the set in question and a closure proof is\nrequired to establish that the operation applied to pairs from that set only produces members of that set. For example,\nthe set of even integers is closed under addition, but the set of odd integers is not.\nWhen a set S is not closed under some operations, one can usually find the smallest set containing S that is closed.\nThis smallest closed set is called the closure of S (with respect to these operations). For example, the closure under\nsubtraction of the set of natural numbers, viewed as a subset of the real numbers, is the set of integers. An important\nexample is that of topological closure. The notion of closure is generalized by Galois connection, and further by\nmonads.\nThe set S must be a subset of a closed set in order for the closure operator to be defined. In the preceding example, it is\nimportant that the reals are closed under subtraction; in the domain of the natural numbers subtraction is not always\ndefined.\nThe two uses of the word \"closure\" should not be confused. The former usage refers to the property of being closed,\nand the latter refers to the smallest closed set containing one that may not be closed. In short, the closure of a set\nsatisfies a closure property.'),
(20, 3, 'Closed sets', 'A set is closed under an operation if the operation returns a member of the set when evaluated on members of the set.\nSometimes the requirement that the operation be valued in a set is explicitly stated, in which case it is known as the\naxiom of closure. For example, one may define a group as a set with a binary product operator obeying several\naxioms, including an axiom that the product of any two elements of the group is again an element. However the\nmodern definition of an operation makes this axiom superfluous; an n-ary operation on S is just a subset of Sn+1. By its\nvery definition, an operator on a set cannot have values outside the set.\nNevertheless, the closure property of an operator on a set still has some utility. Closure on a set does not necessarily\nimply closure on all subsets. Thus a subgroup of a group is a subset on which the binary product and the unary\noperation of inversion satisfy the closure axiom.\nAn operation of a different sort is that of finding the limit points of a subset of a topological space. A set that is closed\nunder this operation is usually referred to as a closed set in the context of topology. Without any further qualification,\nthe phrase usually means closed in this sense. Closed intervals like [1,2] = {x : 1 ≤ x ≤ 2} are closed in this sense.\nA subset of a partially ordered set is a downward closed set (also called a lower set) if for every element of the\nsubset, all smaller elements are also in the subset. This applies for example to the real intervals (−∞, p) and (−∞, p],\nand for an ordinal number p represented as interval [0, p). Every downward closed set of ordinal numbers is itself an\nordinal number. Upward closed sets (also called upper sets) are defined similarly.'),
(20, 4, 'Examples', 'In topology and related branches, the relevant operation is taking limits. The topological closure of a set is the\ncorresponding closure operator. The Kuratowski closure axioms characterize this operator.\nIn linear algebra, the linear span of a set X of vectors is the closure of that set; it is the smallest subset of the\nvector space that includes X and is closed under the operation of linear combination. This subset is a subspace.\nIn matroid theory, the closure of X is the largest superset of X that has the same rank as X.\nIn set theory, the transitive closure of a set.\nIn set theory, the transitive closure of a binary relation.\nIn algebra, the algebraic closure of a field.\nIn commutative algebra, closure operations for ideals, as integral closure and tight closure.\nIn geometry, the convex hull of a set S of points is the smallest convex set of which S is a subset.\nIn formal languages, the Kleene closure of a language can be described as the set of strings that can be made by\nconcatenating zero or more strings from that language.\nIn group theory, the conjugate closure or normal closure of a set of group elements is the smallest normal\nsubgroup containing the set.\nIn mathematical analysis and in probability theory, the closure of a collection of subsets of X under countably\nmany set operations is called the σ-algebra generated by the collection.'),
(20, 5, 'Closure operator', 'Given an operation on a set X, one can define the closure C(S) of a subset S of X to be the smallest subset closed under\nthat operation that contains S as a subset, if any such subsets exist. Consequently, C(S) is the intersection of all closed\nsets containing S. For example, the closure of a subset of a group is the subgroup generated by that set.\nThe closure of sets with respect to some operation defines a closure operator on the subsets of X. The closed sets\ncan be determined from the closure operator; a set is closed if it is equal to its own closure. Typical structural\nproperties of all closure operations are: [1]\nThe closure is increasing or extensive: the closure of an object contains the object.\nThe closure is idempotent: the closure of the closure equals the closure.\nThe closure is monotone, that is, if X is contained in Y, then also C(X) is contained in C(Y).\nAn object that is its own closure is called closed. By idempotency, an object is closed if and only if it is the closure of\nsome object.\nThese three properties define an abstract closure operator. Typically, an abstract closure acts on the class of all\nsubsets of a set.\nIf X is contained in a set closed under the operation then every subset of X has a closure.'),
(20, 6, 'Binary relation closures', 'Consider first homogeneous relations R ⊆ A × A. If a relation S satisfies aSb ⇒ bSa, then it is a symmetric relation. An\narbitrary homogeneous relation R may not be symmetric but it is always contained in some symmetric relation: R ⊆ S.\nThe operation of finding the smallest such S corresponds to a closure operator called symmetric closure.\nA transitive relation T satisfies aTb ∧ bTc ⇒ aTc. An arbitrary homogeneous relation R may not be transitive but it is\nalways contained in some transitive relation: R ⊆ T. The operation of finding the smallest such T corresponds to a\nclosure operator called transitive closure.\nAmong heterogeneous relations there are properties of difunctionality and contact which lead to difunctional\nclosure and contact closure.[2] The presence of these closure operators in binary relations leads to topology since\nopen-set axioms may be replaced by Kuratowski closure axioms. Thus each property P, symmetry, transitivity,\ndifunctionality, or contact corresponds to a relational topology.[3]\nIn the theory of rewriting systems, one often uses more wordy notions such as the reflexive transitive closure R*—\nthe smallest preorder containing R, or the reflexive transitive symmetric closure R≡—the smallest equivalence\nrelation containing R, and therefore also known as the equivalence closure. When considering a particular term\nalgebra, an equivalence relation that is compatible with all operations of the algebra [note 1] is called a congruence\nrelation. The congruence closure of R is defined as the smallest congruence relation containing R.\nFor arbitrary P and R, the P closure of R need not exist. In the above examples, these exist because reflexivity,\ntransitivity and symmetry are closed under arbitrary intersections. In such cases, the P closure can be directly defined\nas the intersection of all sets with property P containing R.[4]\nSome important particular closures can be constructively obtained as follows:\nclref(R) = R ∪ { ⟨x,x⟩ : x ∈ S } is the reflexive closure of R,\nclsym(R) = R ∪ { ⟨y,x⟩ : ⟨x,y⟩ ∈ R } is its symmetric closure,\ncltrn(R) = R ∪ { ⟨x1,xn⟩ : n >1 ∧ ⟨x1,x2⟩, ..., ⟨xn-1,xn⟩ ∈ R } is its transitive closure,\nclemb,Σ(R) = R ∪ { ⟨f(x1,…,xi-1,xi,xi+1,…,xn), f(x1,…,xi-1,y,xi+1,…,xn)⟩ : ⟨xi,y⟩ ∈ R ∧ f ∈ Σ n-ary ∧ 1 ≤ i ≤ n ∧ x1,...,xn ∈\nS } is its embedding closure with respect to a given set Σ of operations on S, each with a fixed arity.\nThe relation R is said to have closure under some clxxx, if R = clxxx(R); for example R is called symmetric if R =\nclsym(R).\nAny of these four closures preserves symmetry, i.e., if R is symmetric, so is any clxxx(R). [note 2] Similarly, all four\npreserve reflexivity. Moreover, cltrn preserves closure under clemb,Σ for arbitrary Σ. As a consequence, the equivalence\nclosure of an arbitrary binary relation R can be obtained as cltrn(clsym(clref(R))), and the congruence closure with\nrespect to some Σ can be obtained as cltrn(clemb,Σ(clsym(clref(R)))). In the latter case, the nesting order does matter; e.g.\nif S is the set of terms over Σ = { a, b, c, f } and R = { ⟨a,b⟩, ⟨f(b),c⟩ }, then the pair ⟨f(a),c⟩ is contained in the\ncongruence closure cltrn(clemb,Σ(clsym(clref(R)))) of R, but not in the relation clemb,Σ(cltrn(clsym(clref(R)))).'),
(21, 1, 'Bread', 'Bread is a staple food typically prepared from a dough of wheat flour and water, usually by baking.'),
(21, 2, 'Wheat', 'Wheat is a type of grain.\nWheat is commonly used for making wheat flour, a typical ingredient of bread dough.'),
(22, 1, 'Bread', 'Bread is a staple food typically prepared from a dough of wheat flour and water, usually by baking.'),
(22, 2, 'Wheat', 'Wheat is a type of grain.\nWheat is commonly used for making wheat flour, a typical ingredient of bread dough.'),
(23, 1, 'Bread', 'Bread is a staple food typically prepared from a dough of wheat flour and water, usually by baking.'),
(23, 2, 'Wheat', 'Wheat is a type of grain.\nWheat is commonly used for making wheat flour, a typical ingredient of bread dough.');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `annotation`
--
ALTER TABLE `annotation`
  ADD PRIMARY KEY (`document_id`,`section_number`,`start`,`end`,`tag`),
  ADD KEY `document_id_idx` (`document_id`) USING BTREE,
  ADD KEY `section_number_idx` (`section_number`) USING BTREE;

--
-- Indexes for table `document`
--
ALTER TABLE `document`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `section`
--
ALTER TABLE `section`
  ADD PRIMARY KEY (`document_id`,`section_number`),
  ADD KEY `document_id` (`document_id`),
  ADD KEY `section_number` (`section_number`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `document`
--
ALTER TABLE `document`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=24;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `annotation`
--
ALTER TABLE `annotation`
  ADD CONSTRAINT `annotation_document_id_fk` FOREIGN KEY (`document_id`) REFERENCES `document` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `annotation_section_fk` FOREIGN KEY (`document_id`,`section_number`) REFERENCES `section` (`document_id`, `section_number`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `section`
--
ALTER TABLE `section`
  ADD CONSTRAINT `section_document_id_fk` FOREIGN KEY (`document_id`) REFERENCES `document` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
